// Copyright 2019-2022 Demian Harvill
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: MServiceInventory.proto

package mserviceinventory

import (
	dml "github.com/gaterace/dml-go/pkg/dml"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// inventory facility entity
type Facility struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// facility identifier
	FacilityId int64 `protobuf:"varint,1,opt,name=facility_id,json=facilityId,proto3" json:"facility_id,omitempty"`
	// creation date
	Created *dml.DateTime `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	// modification date
	Modified *dml.DateTime `protobuf:"bytes,3,opt,name=modified,proto3" json:"modified,omitempty"`
	// deletion date
	Deleted *dml.DateTime `protobuf:"bytes,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// has record been deleted?
	IsDeleted bool `protobuf:"varint,5,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	// mservice account identifier
	MserviceId int64 `protobuf:"varint,7,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// facility name
	FacilityName string `protobuf:"bytes,8,opt,name=facility_name,json=facilityName,proto3" json:"facility_name,omitempty"`
	// data for entity ui extensions
	JsonData string `protobuf:"bytes,9,opt,name=json_data,json=jsonData,proto3" json:"json_data,omitempty"`
}

func (x *Facility) Reset() {
	*x = Facility{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Facility) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Facility) ProtoMessage() {}

func (x *Facility) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Facility.ProtoReflect.Descriptor instead.
func (*Facility) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{0}
}

func (x *Facility) GetFacilityId() int64 {
	if x != nil {
		return x.FacilityId
	}
	return 0
}

func (x *Facility) GetCreated() *dml.DateTime {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Facility) GetModified() *dml.DateTime {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *Facility) GetDeleted() *dml.DateTime {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *Facility) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Facility) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Facility) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *Facility) GetFacilityName() string {
	if x != nil {
		return x.FacilityName
	}
	return ""
}

func (x *Facility) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

// inventory facility wrapper
type FacilityWrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// facility identifier
	FacilityId int64 `protobuf:"varint,1,opt,name=facility_id,json=facilityId,proto3" json:"facility_id,omitempty"`
	// creation date
	Created *dml.DateTime `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	// modification date
	Modified *dml.DateTime `protobuf:"bytes,3,opt,name=modified,proto3" json:"modified,omitempty"`
	// deletion date
	Deleted *dml.DateTime `protobuf:"bytes,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// has record been deleted?
	IsDeleted bool `protobuf:"varint,5,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	// mservice account identifier
	MserviceId int64 `protobuf:"varint,7,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// facility name
	FacilityName string `protobuf:"bytes,8,opt,name=facility_name,json=facilityName,proto3" json:"facility_name,omitempty"`
	// data for entity ui extensions
	JsonData string `protobuf:"bytes,9,opt,name=json_data,json=jsonData,proto3" json:"json_data,omitempty"`
	// list of child subarea wrappers
	ChildSubareas []*SubareaWrapper `protobuf:"bytes,10,rep,name=child_subareas,json=childSubareas,proto3" json:"child_subareas,omitempty"`
}

func (x *FacilityWrapper) Reset() {
	*x = FacilityWrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacilityWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacilityWrapper) ProtoMessage() {}

func (x *FacilityWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacilityWrapper.ProtoReflect.Descriptor instead.
func (*FacilityWrapper) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{1}
}

func (x *FacilityWrapper) GetFacilityId() int64 {
	if x != nil {
		return x.FacilityId
	}
	return 0
}

func (x *FacilityWrapper) GetCreated() *dml.DateTime {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *FacilityWrapper) GetModified() *dml.DateTime {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *FacilityWrapper) GetDeleted() *dml.DateTime {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *FacilityWrapper) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *FacilityWrapper) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *FacilityWrapper) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *FacilityWrapper) GetFacilityName() string {
	if x != nil {
		return x.FacilityName
	}
	return ""
}

func (x *FacilityWrapper) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

func (x *FacilityWrapper) GetChildSubareas() []*SubareaWrapper {
	if x != nil {
		return x.ChildSubareas
	}
	return nil
}

// inventory subarea type mapping
type SubareaType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// subarea type identifier
	SubareaTypeId int32 `protobuf:"varint,2,opt,name=subarea_type_id,json=subareaTypeId,proto3" json:"subarea_type_id,omitempty"`
	// creation date
	Created *dml.DateTime `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	// modification date
	Modified *dml.DateTime `protobuf:"bytes,4,opt,name=modified,proto3" json:"modified,omitempty"`
	// deletion date
	Deleted *dml.DateTime `protobuf:"bytes,5,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// has record been deleted?
	IsDeleted bool `protobuf:"varint,6,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,7,opt,name=version,proto3" json:"version,omitempty"`
	// subarea type name
	SubareaTypeName string `protobuf:"bytes,8,opt,name=subarea_type_name,json=subareaTypeName,proto3" json:"subarea_type_name,omitempty"`
}

func (x *SubareaType) Reset() {
	*x = SubareaType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubareaType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubareaType) ProtoMessage() {}

func (x *SubareaType) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubareaType.ProtoReflect.Descriptor instead.
func (*SubareaType) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{2}
}

func (x *SubareaType) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *SubareaType) GetSubareaTypeId() int32 {
	if x != nil {
		return x.SubareaTypeId
	}
	return 0
}

func (x *SubareaType) GetCreated() *dml.DateTime {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *SubareaType) GetModified() *dml.DateTime {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *SubareaType) GetDeleted() *dml.DateTime {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *SubareaType) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *SubareaType) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *SubareaType) GetSubareaTypeName() string {
	if x != nil {
		return x.SubareaTypeName
	}
	return ""
}

// inventory item type mapping
type ItemType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// inventory item type identifier
	ItemTypeId int32 `protobuf:"varint,2,opt,name=item_type_id,json=itemTypeId,proto3" json:"item_type_id,omitempty"`
	// creation date
	Created *dml.DateTime `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	// modification date
	Modified *dml.DateTime `protobuf:"bytes,4,opt,name=modified,proto3" json:"modified,omitempty"`
	// deletion date
	Deleted *dml.DateTime `protobuf:"bytes,5,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// has record been deleted?
	IsDeleted bool `protobuf:"varint,6,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,7,opt,name=version,proto3" json:"version,omitempty"`
	// item type name
	ItemTypeName string `protobuf:"bytes,8,opt,name=item_type_name,json=itemTypeName,proto3" json:"item_type_name,omitempty"`
}

func (x *ItemType) Reset() {
	*x = ItemType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemType) ProtoMessage() {}

func (x *ItemType) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemType.ProtoReflect.Descriptor instead.
func (*ItemType) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{3}
}

func (x *ItemType) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *ItemType) GetItemTypeId() int32 {
	if x != nil {
		return x.ItemTypeId
	}
	return 0
}

func (x *ItemType) GetCreated() *dml.DateTime {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *ItemType) GetModified() *dml.DateTime {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *ItemType) GetDeleted() *dml.DateTime {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *ItemType) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *ItemType) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ItemType) GetItemTypeName() string {
	if x != nil {
		return x.ItemTypeName
	}
	return ""
}

// inventory subarea within facility
type Subarea struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// subarea identifier
	SubareaId int64 `protobuf:"varint,1,opt,name=subarea_id,json=subareaId,proto3" json:"subarea_id,omitempty"`
	// creation date
	Created *dml.DateTime `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	// modification date
	Modified *dml.DateTime `protobuf:"bytes,3,opt,name=modified,proto3" json:"modified,omitempty"`
	// deletion date
	Deleted *dml.DateTime `protobuf:"bytes,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// has record been deleted?
	IsDeleted bool `protobuf:"varint,5,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	// mservice account identifier
	MserviceId int64 `protobuf:"varint,7,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// facility identifier
	FacilityId int64 `protobuf:"varint,8,opt,name=facility_id,json=facilityId,proto3" json:"facility_id,omitempty"`
	// facility name
	FacilityName string `protobuf:"bytes,9,opt,name=facility_name,json=facilityName,proto3" json:"facility_name,omitempty"`
	// parent subarea identifier, zero if no parent
	ParentSubareaId int64 `protobuf:"varint,10,opt,name=parent_subarea_id,json=parentSubareaId,proto3" json:"parent_subarea_id,omitempty"`
	// position of subarea within parent
	Position int32 `protobuf:"varint,11,opt,name=position,proto3" json:"position,omitempty"`
	// subarea type identifier
	SubareaTypeId int32 `protobuf:"varint,12,opt,name=subarea_type_id,json=subareaTypeId,proto3" json:"subarea_type_id,omitempty"`
	// subarea type name
	SubareaTypeName string `protobuf:"bytes,13,opt,name=subarea_type_name,json=subareaTypeName,proto3" json:"subarea_type_name,omitempty"`
	// subarea name
	SubareaName string `protobuf:"bytes,14,opt,name=subarea_name,json=subareaName,proto3" json:"subarea_name,omitempty"`
	// data for entity ui extensions
	JsonData string `protobuf:"bytes,15,opt,name=json_data,json=jsonData,proto3" json:"json_data,omitempty"`
}

func (x *Subarea) Reset() {
	*x = Subarea{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subarea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subarea) ProtoMessage() {}

func (x *Subarea) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subarea.ProtoReflect.Descriptor instead.
func (*Subarea) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{4}
}

func (x *Subarea) GetSubareaId() int64 {
	if x != nil {
		return x.SubareaId
	}
	return 0
}

func (x *Subarea) GetCreated() *dml.DateTime {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Subarea) GetModified() *dml.DateTime {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *Subarea) GetDeleted() *dml.DateTime {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *Subarea) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Subarea) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Subarea) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *Subarea) GetFacilityId() int64 {
	if x != nil {
		return x.FacilityId
	}
	return 0
}

func (x *Subarea) GetFacilityName() string {
	if x != nil {
		return x.FacilityName
	}
	return ""
}

func (x *Subarea) GetParentSubareaId() int64 {
	if x != nil {
		return x.ParentSubareaId
	}
	return 0
}

func (x *Subarea) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *Subarea) GetSubareaTypeId() int32 {
	if x != nil {
		return x.SubareaTypeId
	}
	return 0
}

func (x *Subarea) GetSubareaTypeName() string {
	if x != nil {
		return x.SubareaTypeName
	}
	return ""
}

func (x *Subarea) GetSubareaName() string {
	if x != nil {
		return x.SubareaName
	}
	return ""
}

func (x *Subarea) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

// wrapper for inventory subarea within facility
type SubareaWrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// subarea identifier
	SubareaId int64 `protobuf:"varint,1,opt,name=subarea_id,json=subareaId,proto3" json:"subarea_id,omitempty"`
	// creation date
	Created *dml.DateTime `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	// modification date
	Modified *dml.DateTime `protobuf:"bytes,3,opt,name=modified,proto3" json:"modified,omitempty"`
	// deletion date
	Deleted *dml.DateTime `protobuf:"bytes,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// has record been deleted?
	IsDeleted bool `protobuf:"varint,5,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	// mservice account identifier
	MserviceId int64 `protobuf:"varint,7,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// facility identifier
	FacilityId int64 `protobuf:"varint,8,opt,name=facility_id,json=facilityId,proto3" json:"facility_id,omitempty"`
	// facility name
	FacilityName string `protobuf:"bytes,9,opt,name=facility_name,json=facilityName,proto3" json:"facility_name,omitempty"`
	// parent subarea identifier, zero if no parent
	ParentSubareaId int64 `protobuf:"varint,10,opt,name=parent_subarea_id,json=parentSubareaId,proto3" json:"parent_subarea_id,omitempty"`
	// position of subarea within parent
	Position int32 `protobuf:"varint,11,opt,name=position,proto3" json:"position,omitempty"`
	// subarea type identifier
	SubareaTypeId int32 `protobuf:"varint,12,opt,name=subarea_type_id,json=subareaTypeId,proto3" json:"subarea_type_id,omitempty"`
	// subarea type name
	SubareaTypeName string `protobuf:"bytes,13,opt,name=subarea_type_name,json=subareaTypeName,proto3" json:"subarea_type_name,omitempty"`
	// subarea name
	SubareaName string `protobuf:"bytes,14,opt,name=subarea_name,json=subareaName,proto3" json:"subarea_name,omitempty"`
	// data for entity ui extensions
	JsonData string `protobuf:"bytes,15,opt,name=json_data,json=jsonData,proto3" json:"json_data,omitempty"`
	// list of child subarea wrappers
	ChildSubareas []*SubareaWrapper `protobuf:"bytes,16,rep,name=child_subareas,json=childSubareas,proto3" json:"child_subareas,omitempty"`
}

func (x *SubareaWrapper) Reset() {
	*x = SubareaWrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubareaWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubareaWrapper) ProtoMessage() {}

func (x *SubareaWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubareaWrapper.ProtoReflect.Descriptor instead.
func (*SubareaWrapper) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{5}
}

func (x *SubareaWrapper) GetSubareaId() int64 {
	if x != nil {
		return x.SubareaId
	}
	return 0
}

func (x *SubareaWrapper) GetCreated() *dml.DateTime {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *SubareaWrapper) GetModified() *dml.DateTime {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *SubareaWrapper) GetDeleted() *dml.DateTime {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *SubareaWrapper) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *SubareaWrapper) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *SubareaWrapper) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *SubareaWrapper) GetFacilityId() int64 {
	if x != nil {
		return x.FacilityId
	}
	return 0
}

func (x *SubareaWrapper) GetFacilityName() string {
	if x != nil {
		return x.FacilityName
	}
	return ""
}

func (x *SubareaWrapper) GetParentSubareaId() int64 {
	if x != nil {
		return x.ParentSubareaId
	}
	return 0
}

func (x *SubareaWrapper) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *SubareaWrapper) GetSubareaTypeId() int32 {
	if x != nil {
		return x.SubareaTypeId
	}
	return 0
}

func (x *SubareaWrapper) GetSubareaTypeName() string {
	if x != nil {
		return x.SubareaTypeName
	}
	return ""
}

func (x *SubareaWrapper) GetSubareaName() string {
	if x != nil {
		return x.SubareaName
	}
	return ""
}

func (x *SubareaWrapper) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

func (x *SubareaWrapper) GetChildSubareas() []*SubareaWrapper {
	if x != nil {
		return x.ChildSubareas
	}
	return nil
}

// inventory product
type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// inventory product identifier
	ProductId int64 `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	// creation date
	Created *dml.DateTime `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	// modification date
	Modified *dml.DateTime `protobuf:"bytes,3,opt,name=modified,proto3" json:"modified,omitempty"`
	// deletion date
	Deleted *dml.DateTime `protobuf:"bytes,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// has record been deleted?
	IsDeleted bool `protobuf:"varint,5,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	// mservice account identifier
	MserviceId int64 `protobuf:"varint,7,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// inventory product sku
	Sku string `protobuf:"bytes,8,opt,name=sku,proto3" json:"sku,omitempty"`
	// product name
	ProductName string `protobuf:"bytes,9,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	// entity comment
	Comment string `protobuf:"bytes,10,opt,name=comment,proto3" json:"comment,omitempty"`
	// data for entity ui extensions
	JsonData string `protobuf:"bytes,11,opt,name=json_data,json=jsonData,proto3" json:"json_data,omitempty"`
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{6}
}

func (x *Product) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *Product) GetCreated() *dml.DateTime {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Product) GetModified() *dml.DateTime {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *Product) GetDeleted() *dml.DateTime {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *Product) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Product) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Product) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *Product) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *Product) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *Product) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Product) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

// inventory item
type InventoryItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// inventory item identifier
	InventoryItemId int64 `protobuf:"varint,1,opt,name=inventory_item_id,json=inventoryItemId,proto3" json:"inventory_item_id,omitempty"`
	// creation date
	Created *dml.DateTime `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	// modification date
	Modified *dml.DateTime `protobuf:"bytes,3,opt,name=modified,proto3" json:"modified,omitempty"`
	// deletion date
	Deleted *dml.DateTime `protobuf:"bytes,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// has record been deleted?
	IsDeleted bool `protobuf:"varint,5,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	// mservice account identifier
	MserviceId int64 `protobuf:"varint,7,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// subarea identifier
	SubareaId int64 `protobuf:"varint,8,opt,name=subarea_id,json=subareaId,proto3" json:"subarea_id,omitempty"`
	// inventory item type identifier
	ItemTypeId int32 `protobuf:"varint,9,opt,name=item_type_id,json=itemTypeId,proto3" json:"item_type_id,omitempty"`
	// item type name
	ItemTypeName string `protobuf:"bytes,10,opt,name=item_type_name,json=itemTypeName,proto3" json:"item_type_name,omitempty"`
	// item quantity
	Quantity int32 `protobuf:"varint,11,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// item serial number
	SerialNumber string `protobuf:"bytes,12,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	// inventory product identifier
	ProductId int64 `protobuf:"varint,13,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	// product name
	ProductName string `protobuf:"bytes,14,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	// data for entity ui extensions
	JsonData string `protobuf:"bytes,15,opt,name=json_data,json=jsonData,proto3" json:"json_data,omitempty"`
}

func (x *InventoryItem) Reset() {
	*x = InventoryItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InventoryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryItem) ProtoMessage() {}

func (x *InventoryItem) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryItem.ProtoReflect.Descriptor instead.
func (*InventoryItem) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{7}
}

func (x *InventoryItem) GetInventoryItemId() int64 {
	if x != nil {
		return x.InventoryItemId
	}
	return 0
}

func (x *InventoryItem) GetCreated() *dml.DateTime {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *InventoryItem) GetModified() *dml.DateTime {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *InventoryItem) GetDeleted() *dml.DateTime {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *InventoryItem) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *InventoryItem) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *InventoryItem) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *InventoryItem) GetSubareaId() int64 {
	if x != nil {
		return x.SubareaId
	}
	return 0
}

func (x *InventoryItem) GetItemTypeId() int32 {
	if x != nil {
		return x.ItemTypeId
	}
	return 0
}

func (x *InventoryItem) GetItemTypeName() string {
	if x != nil {
		return x.ItemTypeName
	}
	return ""
}

func (x *InventoryItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *InventoryItem) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *InventoryItem) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *InventoryItem) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *InventoryItem) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

// MService inventory extension schema
type EntitySchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// name of entity to be extended
	EntityName string `protobuf:"bytes,2,opt,name=entity_name,json=entityName,proto3" json:"entity_name,omitempty"`
	// creation date
	Created *dml.DateTime `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	// modification date
	Modified *dml.DateTime `protobuf:"bytes,4,opt,name=modified,proto3" json:"modified,omitempty"`
	// deletion date
	Deleted *dml.DateTime `protobuf:"bytes,5,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// has record been deleted?
	IsDeleted bool `protobuf:"varint,6,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,7,opt,name=version,proto3" json:"version,omitempty"`
	// schema for json_data extensions
	JsonSchema string `protobuf:"bytes,8,opt,name=json_schema,json=jsonSchema,proto3" json:"json_schema,omitempty"`
}

func (x *EntitySchema) Reset() {
	*x = EntitySchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntitySchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntitySchema) ProtoMessage() {}

func (x *EntitySchema) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntitySchema.ProtoReflect.Descriptor instead.
func (*EntitySchema) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{8}
}

func (x *EntitySchema) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *EntitySchema) GetEntityName() string {
	if x != nil {
		return x.EntityName
	}
	return ""
}

func (x *EntitySchema) GetCreated() *dml.DateTime {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *EntitySchema) GetModified() *dml.DateTime {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *EntitySchema) GetDeleted() *dml.DateTime {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *EntitySchema) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *EntitySchema) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *EntitySchema) GetJsonSchema() string {
	if x != nil {
		return x.JsonSchema
	}
	return ""
}

// request parameters for method create_facility
type CreateFacilityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// facility name
	FacilityName string `protobuf:"bytes,2,opt,name=facility_name,json=facilityName,proto3" json:"facility_name,omitempty"`
	// data for entity ui extensions
	JsonData string `protobuf:"bytes,3,opt,name=json_data,json=jsonData,proto3" json:"json_data,omitempty"`
}

func (x *CreateFacilityRequest) Reset() {
	*x = CreateFacilityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFacilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFacilityRequest) ProtoMessage() {}

func (x *CreateFacilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFacilityRequest.ProtoReflect.Descriptor instead.
func (*CreateFacilityRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{9}
}

func (x *CreateFacilityRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *CreateFacilityRequest) GetFacilityName() string {
	if x != nil {
		return x.FacilityName
	}
	return ""
}

func (x *CreateFacilityRequest) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

// response parameters for method create_facility
type CreateFacilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// facility identifier
	FacilityId int64 `protobuf:"varint,4,opt,name=facility_id,json=facilityId,proto3" json:"facility_id,omitempty"`
}

func (x *CreateFacilityResponse) Reset() {
	*x = CreateFacilityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFacilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFacilityResponse) ProtoMessage() {}

func (x *CreateFacilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFacilityResponse.ProtoReflect.Descriptor instead.
func (*CreateFacilityResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{10}
}

func (x *CreateFacilityResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *CreateFacilityResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreateFacilityResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *CreateFacilityResponse) GetFacilityId() int64 {
	if x != nil {
		return x.FacilityId
	}
	return 0
}

// request parameters for method update_facility
type UpdateFacilityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// facility identifier
	FacilityId int64 `protobuf:"varint,2,opt,name=facility_id,json=facilityId,proto3" json:"facility_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// facility name
	FacilityName string `protobuf:"bytes,4,opt,name=facility_name,json=facilityName,proto3" json:"facility_name,omitempty"`
	// data for entity ui extensions
	JsonData string `protobuf:"bytes,5,opt,name=json_data,json=jsonData,proto3" json:"json_data,omitempty"`
}

func (x *UpdateFacilityRequest) Reset() {
	*x = UpdateFacilityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFacilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFacilityRequest) ProtoMessage() {}

func (x *UpdateFacilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFacilityRequest.ProtoReflect.Descriptor instead.
func (*UpdateFacilityRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateFacilityRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *UpdateFacilityRequest) GetFacilityId() int64 {
	if x != nil {
		return x.FacilityId
	}
	return 0
}

func (x *UpdateFacilityRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UpdateFacilityRequest) GetFacilityName() string {
	if x != nil {
		return x.FacilityName
	}
	return ""
}

func (x *UpdateFacilityRequest) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

// response parameters for method update_facility
type UpdateFacilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *UpdateFacilityResponse) Reset() {
	*x = UpdateFacilityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFacilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFacilityResponse) ProtoMessage() {}

func (x *UpdateFacilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFacilityResponse.ProtoReflect.Descriptor instead.
func (*UpdateFacilityResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateFacilityResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *UpdateFacilityResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *UpdateFacilityResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method delete_facility
type DeleteFacilityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// facility identifier
	FacilityId int64 `protobuf:"varint,2,opt,name=facility_id,json=facilityId,proto3" json:"facility_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteFacilityRequest) Reset() {
	*x = DeleteFacilityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFacilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFacilityRequest) ProtoMessage() {}

func (x *DeleteFacilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFacilityRequest.ProtoReflect.Descriptor instead.
func (*DeleteFacilityRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteFacilityRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *DeleteFacilityRequest) GetFacilityId() int64 {
	if x != nil {
		return x.FacilityId
	}
	return 0
}

func (x *DeleteFacilityRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// response parameters for method delete_facility
type DeleteFacilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteFacilityResponse) Reset() {
	*x = DeleteFacilityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFacilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFacilityResponse) ProtoMessage() {}

func (x *DeleteFacilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFacilityResponse.ProtoReflect.Descriptor instead.
func (*DeleteFacilityResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteFacilityResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *DeleteFacilityResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DeleteFacilityResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method get_facility
type GetFacilityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// facility identifier
	FacilityId int64 `protobuf:"varint,2,opt,name=facility_id,json=facilityId,proto3" json:"facility_id,omitempty"`
}

func (x *GetFacilityRequest) Reset() {
	*x = GetFacilityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFacilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFacilityRequest) ProtoMessage() {}

func (x *GetFacilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFacilityRequest.ProtoReflect.Descriptor instead.
func (*GetFacilityRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{15}
}

func (x *GetFacilityRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *GetFacilityRequest) GetFacilityId() int64 {
	if x != nil {
		return x.FacilityId
	}
	return 0
}

// response parameters for method get_facility
type GetFacilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// inventory facility object
	Facility *Facility `protobuf:"bytes,3,opt,name=facility,proto3" json:"facility,omitempty"`
}

func (x *GetFacilityResponse) Reset() {
	*x = GetFacilityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFacilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFacilityResponse) ProtoMessage() {}

func (x *GetFacilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFacilityResponse.ProtoReflect.Descriptor instead.
func (*GetFacilityResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{16}
}

func (x *GetFacilityResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetFacilityResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetFacilityResponse) GetFacility() *Facility {
	if x != nil {
		return x.Facility
	}
	return nil
}

// request parameters for method get_facilities
type GetFacilitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
}

func (x *GetFacilitiesRequest) Reset() {
	*x = GetFacilitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFacilitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFacilitiesRequest) ProtoMessage() {}

func (x *GetFacilitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFacilitiesRequest.ProtoReflect.Descriptor instead.
func (*GetFacilitiesRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{17}
}

func (x *GetFacilitiesRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

// response parameters for method get_facilities
type GetFacilitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// list of inventory facility objects
	Facilities []*Facility `protobuf:"bytes,3,rep,name=facilities,proto3" json:"facilities,omitempty"`
}

func (x *GetFacilitiesResponse) Reset() {
	*x = GetFacilitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFacilitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFacilitiesResponse) ProtoMessage() {}

func (x *GetFacilitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFacilitiesResponse.ProtoReflect.Descriptor instead.
func (*GetFacilitiesResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{18}
}

func (x *GetFacilitiesResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetFacilitiesResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetFacilitiesResponse) GetFacilities() []*Facility {
	if x != nil {
		return x.Facilities
	}
	return nil
}

// request parameters for method get_facility_wrapper
type GetFacilityWrapperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// facility identifier
	FacilityId int64 `protobuf:"varint,2,opt,name=facility_id,json=facilityId,proto3" json:"facility_id,omitempty"`
}

func (x *GetFacilityWrapperRequest) Reset() {
	*x = GetFacilityWrapperRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFacilityWrapperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFacilityWrapperRequest) ProtoMessage() {}

func (x *GetFacilityWrapperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFacilityWrapperRequest.ProtoReflect.Descriptor instead.
func (*GetFacilityWrapperRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{19}
}

func (x *GetFacilityWrapperRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *GetFacilityWrapperRequest) GetFacilityId() int64 {
	if x != nil {
		return x.FacilityId
	}
	return 0
}

// response parameters for method get_facility_wrapper
type GetFacilityWrapperResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// facility wrapper object
	FacilityWrapper *FacilityWrapper `protobuf:"bytes,3,opt,name=facility_wrapper,json=facilityWrapper,proto3" json:"facility_wrapper,omitempty"`
}

func (x *GetFacilityWrapperResponse) Reset() {
	*x = GetFacilityWrapperResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFacilityWrapperResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFacilityWrapperResponse) ProtoMessage() {}

func (x *GetFacilityWrapperResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFacilityWrapperResponse.ProtoReflect.Descriptor instead.
func (*GetFacilityWrapperResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{20}
}

func (x *GetFacilityWrapperResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetFacilityWrapperResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetFacilityWrapperResponse) GetFacilityWrapper() *FacilityWrapper {
	if x != nil {
		return x.FacilityWrapper
	}
	return nil
}

// request parameters for method create_subarea_type
type CreateSubareaTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// subarea type identifier
	SubareaTypeId int32 `protobuf:"varint,2,opt,name=subarea_type_id,json=subareaTypeId,proto3" json:"subarea_type_id,omitempty"`
	// subarea type name
	SubareaTypeName string `protobuf:"bytes,3,opt,name=subarea_type_name,json=subareaTypeName,proto3" json:"subarea_type_name,omitempty"`
}

func (x *CreateSubareaTypeRequest) Reset() {
	*x = CreateSubareaTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSubareaTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubareaTypeRequest) ProtoMessage() {}

func (x *CreateSubareaTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubareaTypeRequest.ProtoReflect.Descriptor instead.
func (*CreateSubareaTypeRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{21}
}

func (x *CreateSubareaTypeRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *CreateSubareaTypeRequest) GetSubareaTypeId() int32 {
	if x != nil {
		return x.SubareaTypeId
	}
	return 0
}

func (x *CreateSubareaTypeRequest) GetSubareaTypeName() string {
	if x != nil {
		return x.SubareaTypeName
	}
	return ""
}

// response parameters for method create_subarea_type
type CreateSubareaTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *CreateSubareaTypeResponse) Reset() {
	*x = CreateSubareaTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSubareaTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubareaTypeResponse) ProtoMessage() {}

func (x *CreateSubareaTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubareaTypeResponse.ProtoReflect.Descriptor instead.
func (*CreateSubareaTypeResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{22}
}

func (x *CreateSubareaTypeResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *CreateSubareaTypeResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreateSubareaTypeResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method update_subarea_type
type UpdateSubareaTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// subarea type identifier
	SubareaTypeId int32 `protobuf:"varint,2,opt,name=subarea_type_id,json=subareaTypeId,proto3" json:"subarea_type_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// subarea type name
	SubareaTypeName string `protobuf:"bytes,4,opt,name=subarea_type_name,json=subareaTypeName,proto3" json:"subarea_type_name,omitempty"`
}

func (x *UpdateSubareaTypeRequest) Reset() {
	*x = UpdateSubareaTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubareaTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubareaTypeRequest) ProtoMessage() {}

func (x *UpdateSubareaTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubareaTypeRequest.ProtoReflect.Descriptor instead.
func (*UpdateSubareaTypeRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateSubareaTypeRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *UpdateSubareaTypeRequest) GetSubareaTypeId() int32 {
	if x != nil {
		return x.SubareaTypeId
	}
	return 0
}

func (x *UpdateSubareaTypeRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UpdateSubareaTypeRequest) GetSubareaTypeName() string {
	if x != nil {
		return x.SubareaTypeName
	}
	return ""
}

// response parameters for method update_subarea_type
type UpdateSubareaTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *UpdateSubareaTypeResponse) Reset() {
	*x = UpdateSubareaTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubareaTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubareaTypeResponse) ProtoMessage() {}

func (x *UpdateSubareaTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubareaTypeResponse.ProtoReflect.Descriptor instead.
func (*UpdateSubareaTypeResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateSubareaTypeResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *UpdateSubareaTypeResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *UpdateSubareaTypeResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method delete_subarea_type
type DeleteSubareaTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// subarea type identifier
	SubareaTypeId int32 `protobuf:"varint,2,opt,name=subarea_type_id,json=subareaTypeId,proto3" json:"subarea_type_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteSubareaTypeRequest) Reset() {
	*x = DeleteSubareaTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSubareaTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubareaTypeRequest) ProtoMessage() {}

func (x *DeleteSubareaTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubareaTypeRequest.ProtoReflect.Descriptor instead.
func (*DeleteSubareaTypeRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteSubareaTypeRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *DeleteSubareaTypeRequest) GetSubareaTypeId() int32 {
	if x != nil {
		return x.SubareaTypeId
	}
	return 0
}

func (x *DeleteSubareaTypeRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// response parameters for method delete_subarea_type
type DeleteSubareaTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteSubareaTypeResponse) Reset() {
	*x = DeleteSubareaTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSubareaTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubareaTypeResponse) ProtoMessage() {}

func (x *DeleteSubareaTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubareaTypeResponse.ProtoReflect.Descriptor instead.
func (*DeleteSubareaTypeResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{26}
}

func (x *DeleteSubareaTypeResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *DeleteSubareaTypeResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DeleteSubareaTypeResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method get_subarea_type
type GetSubareaTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// subarea type identifier
	SubareaTypeId int32 `protobuf:"varint,2,opt,name=subarea_type_id,json=subareaTypeId,proto3" json:"subarea_type_id,omitempty"`
}

func (x *GetSubareaTypeRequest) Reset() {
	*x = GetSubareaTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubareaTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubareaTypeRequest) ProtoMessage() {}

func (x *GetSubareaTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubareaTypeRequest.ProtoReflect.Descriptor instead.
func (*GetSubareaTypeRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{27}
}

func (x *GetSubareaTypeRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *GetSubareaTypeRequest) GetSubareaTypeId() int32 {
	if x != nil {
		return x.SubareaTypeId
	}
	return 0
}

// response parameters for method get_subarea_type
type GetSubareaTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// subarea type object
	SubareaType *SubareaType `protobuf:"bytes,3,opt,name=subarea_type,json=subareaType,proto3" json:"subarea_type,omitempty"`
}

func (x *GetSubareaTypeResponse) Reset() {
	*x = GetSubareaTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubareaTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubareaTypeResponse) ProtoMessage() {}

func (x *GetSubareaTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubareaTypeResponse.ProtoReflect.Descriptor instead.
func (*GetSubareaTypeResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{28}
}

func (x *GetSubareaTypeResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetSubareaTypeResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetSubareaTypeResponse) GetSubareaType() *SubareaType {
	if x != nil {
		return x.SubareaType
	}
	return nil
}

// request parameters for method get_subarea_types
type GetSubareaTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
}

func (x *GetSubareaTypesRequest) Reset() {
	*x = GetSubareaTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubareaTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubareaTypesRequest) ProtoMessage() {}

func (x *GetSubareaTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubareaTypesRequest.ProtoReflect.Descriptor instead.
func (*GetSubareaTypesRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{29}
}

func (x *GetSubareaTypesRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

// response parameters for method get_subarea_types
type GetSubareaTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// list of subarea type objects
	SubareaTypes []*SubareaType `protobuf:"bytes,3,rep,name=subarea_types,json=subareaTypes,proto3" json:"subarea_types,omitempty"`
}

func (x *GetSubareaTypesResponse) Reset() {
	*x = GetSubareaTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubareaTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubareaTypesResponse) ProtoMessage() {}

func (x *GetSubareaTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubareaTypesResponse.ProtoReflect.Descriptor instead.
func (*GetSubareaTypesResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{30}
}

func (x *GetSubareaTypesResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetSubareaTypesResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetSubareaTypesResponse) GetSubareaTypes() []*SubareaType {
	if x != nil {
		return x.SubareaTypes
	}
	return nil
}

// request parameters for method create_item_type
type CreateItemTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// inventory item type identifier
	ItemTypeId int32 `protobuf:"varint,2,opt,name=item_type_id,json=itemTypeId,proto3" json:"item_type_id,omitempty"`
	// item type name
	ItemTypeName string `protobuf:"bytes,3,opt,name=item_type_name,json=itemTypeName,proto3" json:"item_type_name,omitempty"`
}

func (x *CreateItemTypeRequest) Reset() {
	*x = CreateItemTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateItemTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateItemTypeRequest) ProtoMessage() {}

func (x *CreateItemTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateItemTypeRequest.ProtoReflect.Descriptor instead.
func (*CreateItemTypeRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{31}
}

func (x *CreateItemTypeRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *CreateItemTypeRequest) GetItemTypeId() int32 {
	if x != nil {
		return x.ItemTypeId
	}
	return 0
}

func (x *CreateItemTypeRequest) GetItemTypeName() string {
	if x != nil {
		return x.ItemTypeName
	}
	return ""
}

// response parameters for method create_item_type
type CreateItemTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *CreateItemTypeResponse) Reset() {
	*x = CreateItemTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateItemTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateItemTypeResponse) ProtoMessage() {}

func (x *CreateItemTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateItemTypeResponse.ProtoReflect.Descriptor instead.
func (*CreateItemTypeResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{32}
}

func (x *CreateItemTypeResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *CreateItemTypeResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreateItemTypeResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method update_item_type
type UpdateItemTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// inventory item type identifier
	ItemTypeId int32 `protobuf:"varint,2,opt,name=item_type_id,json=itemTypeId,proto3" json:"item_type_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// item type name
	ItemTypeName string `protobuf:"bytes,4,opt,name=item_type_name,json=itemTypeName,proto3" json:"item_type_name,omitempty"`
}

func (x *UpdateItemTypeRequest) Reset() {
	*x = UpdateItemTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateItemTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateItemTypeRequest) ProtoMessage() {}

func (x *UpdateItemTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateItemTypeRequest.ProtoReflect.Descriptor instead.
func (*UpdateItemTypeRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateItemTypeRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *UpdateItemTypeRequest) GetItemTypeId() int32 {
	if x != nil {
		return x.ItemTypeId
	}
	return 0
}

func (x *UpdateItemTypeRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UpdateItemTypeRequest) GetItemTypeName() string {
	if x != nil {
		return x.ItemTypeName
	}
	return ""
}

// response parameters for method update_item_type
type UpdateItemTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *UpdateItemTypeResponse) Reset() {
	*x = UpdateItemTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateItemTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateItemTypeResponse) ProtoMessage() {}

func (x *UpdateItemTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateItemTypeResponse.ProtoReflect.Descriptor instead.
func (*UpdateItemTypeResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateItemTypeResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *UpdateItemTypeResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *UpdateItemTypeResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method delete_item_type
type DeleteItemTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// inventory item type identifier
	ItemTypeId int32 `protobuf:"varint,2,opt,name=item_type_id,json=itemTypeId,proto3" json:"item_type_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteItemTypeRequest) Reset() {
	*x = DeleteItemTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteItemTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteItemTypeRequest) ProtoMessage() {}

func (x *DeleteItemTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteItemTypeRequest.ProtoReflect.Descriptor instead.
func (*DeleteItemTypeRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{35}
}

func (x *DeleteItemTypeRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *DeleteItemTypeRequest) GetItemTypeId() int32 {
	if x != nil {
		return x.ItemTypeId
	}
	return 0
}

func (x *DeleteItemTypeRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// response parameters for method delete_item_type
type DeleteItemTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteItemTypeResponse) Reset() {
	*x = DeleteItemTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteItemTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteItemTypeResponse) ProtoMessage() {}

func (x *DeleteItemTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteItemTypeResponse.ProtoReflect.Descriptor instead.
func (*DeleteItemTypeResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{36}
}

func (x *DeleteItemTypeResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *DeleteItemTypeResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DeleteItemTypeResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method get_item_type
type GetItemTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// inventory item type identifier
	ItemTypeId int32 `protobuf:"varint,2,opt,name=item_type_id,json=itemTypeId,proto3" json:"item_type_id,omitempty"`
}

func (x *GetItemTypeRequest) Reset() {
	*x = GetItemTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemTypeRequest) ProtoMessage() {}

func (x *GetItemTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemTypeRequest.ProtoReflect.Descriptor instead.
func (*GetItemTypeRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{37}
}

func (x *GetItemTypeRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *GetItemTypeRequest) GetItemTypeId() int32 {
	if x != nil {
		return x.ItemTypeId
	}
	return 0
}

// response parameters for method get_item_type
type GetItemTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// inventory item type object
	ItemType *ItemType `protobuf:"bytes,3,opt,name=item_type,json=itemType,proto3" json:"item_type,omitempty"`
}

func (x *GetItemTypeResponse) Reset() {
	*x = GetItemTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemTypeResponse) ProtoMessage() {}

func (x *GetItemTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemTypeResponse.ProtoReflect.Descriptor instead.
func (*GetItemTypeResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{38}
}

func (x *GetItemTypeResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetItemTypeResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetItemTypeResponse) GetItemType() *ItemType {
	if x != nil {
		return x.ItemType
	}
	return nil
}

// request parameters for method get_item_types
type GetItemTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
}

func (x *GetItemTypesRequest) Reset() {
	*x = GetItemTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemTypesRequest) ProtoMessage() {}

func (x *GetItemTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemTypesRequest.ProtoReflect.Descriptor instead.
func (*GetItemTypesRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{39}
}

func (x *GetItemTypesRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

// response parameters for method get_item_types
type GetItemTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// list of inventory item type objects
	ItemTypes []*ItemType `protobuf:"bytes,3,rep,name=item_types,json=itemTypes,proto3" json:"item_types,omitempty"`
}

func (x *GetItemTypesResponse) Reset() {
	*x = GetItemTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemTypesResponse) ProtoMessage() {}

func (x *GetItemTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemTypesResponse.ProtoReflect.Descriptor instead.
func (*GetItemTypesResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{40}
}

func (x *GetItemTypesResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetItemTypesResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetItemTypesResponse) GetItemTypes() []*ItemType {
	if x != nil {
		return x.ItemTypes
	}
	return nil
}

// request parameters for method create_subarea
type CreateSubareaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// facility identifier
	FacilityId int64 `protobuf:"varint,2,opt,name=facility_id,json=facilityId,proto3" json:"facility_id,omitempty"`
	// parent subarea identifier, zero if no parent
	ParentSubareaId int64 `protobuf:"varint,3,opt,name=parent_subarea_id,json=parentSubareaId,proto3" json:"parent_subarea_id,omitempty"`
	// position of subarea within parent
	Position int32 `protobuf:"varint,4,opt,name=position,proto3" json:"position,omitempty"`
	// subarea type identifier
	SubareaTypeId int32 `protobuf:"varint,5,opt,name=subarea_type_id,json=subareaTypeId,proto3" json:"subarea_type_id,omitempty"`
	// subarea name
	SubareaName string `protobuf:"bytes,6,opt,name=subarea_name,json=subareaName,proto3" json:"subarea_name,omitempty"`
	// data for entity ui extensions
	JsonData string `protobuf:"bytes,7,opt,name=json_data,json=jsonData,proto3" json:"json_data,omitempty"`
}

func (x *CreateSubareaRequest) Reset() {
	*x = CreateSubareaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSubareaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubareaRequest) ProtoMessage() {}

func (x *CreateSubareaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubareaRequest.ProtoReflect.Descriptor instead.
func (*CreateSubareaRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{41}
}

func (x *CreateSubareaRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *CreateSubareaRequest) GetFacilityId() int64 {
	if x != nil {
		return x.FacilityId
	}
	return 0
}

func (x *CreateSubareaRequest) GetParentSubareaId() int64 {
	if x != nil {
		return x.ParentSubareaId
	}
	return 0
}

func (x *CreateSubareaRequest) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *CreateSubareaRequest) GetSubareaTypeId() int32 {
	if x != nil {
		return x.SubareaTypeId
	}
	return 0
}

func (x *CreateSubareaRequest) GetSubareaName() string {
	if x != nil {
		return x.SubareaName
	}
	return ""
}

func (x *CreateSubareaRequest) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

// response parameters for method create_subarea
type CreateSubareaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// subarea identifier
	SubareaId int64 `protobuf:"varint,4,opt,name=subarea_id,json=subareaId,proto3" json:"subarea_id,omitempty"`
}

func (x *CreateSubareaResponse) Reset() {
	*x = CreateSubareaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSubareaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubareaResponse) ProtoMessage() {}

func (x *CreateSubareaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubareaResponse.ProtoReflect.Descriptor instead.
func (*CreateSubareaResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{42}
}

func (x *CreateSubareaResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *CreateSubareaResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreateSubareaResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *CreateSubareaResponse) GetSubareaId() int64 {
	if x != nil {
		return x.SubareaId
	}
	return 0
}

// request parameters for method update_subarea
type UpdateSubareaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// subarea identifier
	SubareaId int64 `protobuf:"varint,2,opt,name=subarea_id,json=subareaId,proto3" json:"subarea_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// parent subarea identifier, zero if no parent
	ParentSubareaId int64 `protobuf:"varint,4,opt,name=parent_subarea_id,json=parentSubareaId,proto3" json:"parent_subarea_id,omitempty"`
	// position of subarea within parent
	Position int32 `protobuf:"varint,5,opt,name=position,proto3" json:"position,omitempty"`
	// subarea type identifier
	SubareaTypeId int32 `protobuf:"varint,6,opt,name=subarea_type_id,json=subareaTypeId,proto3" json:"subarea_type_id,omitempty"`
	// subarea name
	SubareaName string `protobuf:"bytes,7,opt,name=subarea_name,json=subareaName,proto3" json:"subarea_name,omitempty"`
	// data for entity ui extensions
	JsonData string `protobuf:"bytes,8,opt,name=json_data,json=jsonData,proto3" json:"json_data,omitempty"`
}

func (x *UpdateSubareaRequest) Reset() {
	*x = UpdateSubareaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubareaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubareaRequest) ProtoMessage() {}

func (x *UpdateSubareaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubareaRequest.ProtoReflect.Descriptor instead.
func (*UpdateSubareaRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{43}
}

func (x *UpdateSubareaRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *UpdateSubareaRequest) GetSubareaId() int64 {
	if x != nil {
		return x.SubareaId
	}
	return 0
}

func (x *UpdateSubareaRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UpdateSubareaRequest) GetParentSubareaId() int64 {
	if x != nil {
		return x.ParentSubareaId
	}
	return 0
}

func (x *UpdateSubareaRequest) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *UpdateSubareaRequest) GetSubareaTypeId() int32 {
	if x != nil {
		return x.SubareaTypeId
	}
	return 0
}

func (x *UpdateSubareaRequest) GetSubareaName() string {
	if x != nil {
		return x.SubareaName
	}
	return ""
}

func (x *UpdateSubareaRequest) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

// response parameters for method update_subarea
type UpdateSubareaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *UpdateSubareaResponse) Reset() {
	*x = UpdateSubareaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubareaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubareaResponse) ProtoMessage() {}

func (x *UpdateSubareaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubareaResponse.ProtoReflect.Descriptor instead.
func (*UpdateSubareaResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{44}
}

func (x *UpdateSubareaResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *UpdateSubareaResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *UpdateSubareaResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method delete_subarea
type DeleteSubareaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// subarea identifier
	SubareaId int64 `protobuf:"varint,2,opt,name=subarea_id,json=subareaId,proto3" json:"subarea_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteSubareaRequest) Reset() {
	*x = DeleteSubareaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSubareaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubareaRequest) ProtoMessage() {}

func (x *DeleteSubareaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubareaRequest.ProtoReflect.Descriptor instead.
func (*DeleteSubareaRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{45}
}

func (x *DeleteSubareaRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *DeleteSubareaRequest) GetSubareaId() int64 {
	if x != nil {
		return x.SubareaId
	}
	return 0
}

func (x *DeleteSubareaRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// response parameters for method delete_subarea
type DeleteSubareaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteSubareaResponse) Reset() {
	*x = DeleteSubareaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSubareaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubareaResponse) ProtoMessage() {}

func (x *DeleteSubareaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubareaResponse.ProtoReflect.Descriptor instead.
func (*DeleteSubareaResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{46}
}

func (x *DeleteSubareaResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *DeleteSubareaResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DeleteSubareaResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method get_subarea
type GetSubareaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// subarea identifier
	SubareaId int64 `protobuf:"varint,2,opt,name=subarea_id,json=subareaId,proto3" json:"subarea_id,omitempty"`
}

func (x *GetSubareaRequest) Reset() {
	*x = GetSubareaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubareaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubareaRequest) ProtoMessage() {}

func (x *GetSubareaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubareaRequest.ProtoReflect.Descriptor instead.
func (*GetSubareaRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{47}
}

func (x *GetSubareaRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *GetSubareaRequest) GetSubareaId() int64 {
	if x != nil {
		return x.SubareaId
	}
	return 0
}

// response parameters for method get_subarea
type GetSubareaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// subarea object
	Subarea *Subarea `protobuf:"bytes,3,opt,name=subarea,proto3" json:"subarea,omitempty"`
}

func (x *GetSubareaResponse) Reset() {
	*x = GetSubareaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubareaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubareaResponse) ProtoMessage() {}

func (x *GetSubareaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubareaResponse.ProtoReflect.Descriptor instead.
func (*GetSubareaResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{48}
}

func (x *GetSubareaResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetSubareaResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetSubareaResponse) GetSubarea() *Subarea {
	if x != nil {
		return x.Subarea
	}
	return nil
}

// request parameters for method get_subareas
type GetSubareasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// facility identifier
	FacilityId int64 `protobuf:"varint,2,opt,name=facility_id,json=facilityId,proto3" json:"facility_id,omitempty"`
}

func (x *GetSubareasRequest) Reset() {
	*x = GetSubareasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubareasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubareasRequest) ProtoMessage() {}

func (x *GetSubareasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubareasRequest.ProtoReflect.Descriptor instead.
func (*GetSubareasRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{49}
}

func (x *GetSubareasRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *GetSubareasRequest) GetFacilityId() int64 {
	if x != nil {
		return x.FacilityId
	}
	return 0
}

// response parameters for method get_subareas
type GetSubareasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// list of subarea objects
	Subareas []*Subarea `protobuf:"bytes,3,rep,name=subareas,proto3" json:"subareas,omitempty"`
}

func (x *GetSubareasResponse) Reset() {
	*x = GetSubareasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubareasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubareasResponse) ProtoMessage() {}

func (x *GetSubareasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubareasResponse.ProtoReflect.Descriptor instead.
func (*GetSubareasResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{50}
}

func (x *GetSubareasResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetSubareasResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetSubareasResponse) GetSubareas() []*Subarea {
	if x != nil {
		return x.Subareas
	}
	return nil
}

// request parameters for method create_product
type CreateProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// inventory product sku
	Sku string `protobuf:"bytes,2,opt,name=sku,proto3" json:"sku,omitempty"`
	// product name
	ProductName string `protobuf:"bytes,3,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	// entity comment
	Comment string `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	// data for entity ui extensions
	JsonData string `protobuf:"bytes,5,opt,name=json_data,json=jsonData,proto3" json:"json_data,omitempty"`
}

func (x *CreateProductRequest) Reset() {
	*x = CreateProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductRequest) ProtoMessage() {}

func (x *CreateProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductRequest.ProtoReflect.Descriptor instead.
func (*CreateProductRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{51}
}

func (x *CreateProductRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *CreateProductRequest) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *CreateProductRequest) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *CreateProductRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *CreateProductRequest) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

// response parameters for method create_product
type CreateProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// inventory product identifier
	ProductId int64 `protobuf:"varint,4,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *CreateProductResponse) Reset() {
	*x = CreateProductResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductResponse) ProtoMessage() {}

func (x *CreateProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductResponse.ProtoReflect.Descriptor instead.
func (*CreateProductResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{52}
}

func (x *CreateProductResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *CreateProductResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreateProductResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *CreateProductResponse) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

// request parameters for method update_product
type UpdateProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// inventory product identifier
	ProductId int64 `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// inventory product sku
	Sku string `protobuf:"bytes,4,opt,name=sku,proto3" json:"sku,omitempty"`
	// product name
	ProductName string `protobuf:"bytes,5,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	// entity comment
	Comment string `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty"`
	// data for entity ui extensions
	JsonData string `protobuf:"bytes,7,opt,name=json_data,json=jsonData,proto3" json:"json_data,omitempty"`
}

func (x *UpdateProductRequest) Reset() {
	*x = UpdateProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductRequest) ProtoMessage() {}

func (x *UpdateProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductRequest.ProtoReflect.Descriptor instead.
func (*UpdateProductRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{53}
}

func (x *UpdateProductRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *UpdateProductRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *UpdateProductRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UpdateProductRequest) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *UpdateProductRequest) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *UpdateProductRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *UpdateProductRequest) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

// response parameters for method update_product
type UpdateProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *UpdateProductResponse) Reset() {
	*x = UpdateProductResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductResponse) ProtoMessage() {}

func (x *UpdateProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductResponse.ProtoReflect.Descriptor instead.
func (*UpdateProductResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{54}
}

func (x *UpdateProductResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *UpdateProductResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *UpdateProductResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method delete_product
type DeleteProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// inventory product identifier
	ProductId int64 `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteProductRequest) Reset() {
	*x = DeleteProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductRequest) ProtoMessage() {}

func (x *DeleteProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductRequest.ProtoReflect.Descriptor instead.
func (*DeleteProductRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{55}
}

func (x *DeleteProductRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *DeleteProductRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *DeleteProductRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// response parameters for method delete_product
type DeleteProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteProductResponse) Reset() {
	*x = DeleteProductResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductResponse) ProtoMessage() {}

func (x *DeleteProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductResponse.ProtoReflect.Descriptor instead.
func (*DeleteProductResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{56}
}

func (x *DeleteProductResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *DeleteProductResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DeleteProductResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method get_product
type GetProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// inventory product identifier
	ProductId int64 `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *GetProductRequest) Reset() {
	*x = GetProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductRequest) ProtoMessage() {}

func (x *GetProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductRequest.ProtoReflect.Descriptor instead.
func (*GetProductRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{57}
}

func (x *GetProductRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *GetProductRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

// response parameters for method get_product
type GetProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// inventory product object
	Product *Product `protobuf:"bytes,3,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *GetProductResponse) Reset() {
	*x = GetProductResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductResponse) ProtoMessage() {}

func (x *GetProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductResponse.ProtoReflect.Descriptor instead.
func (*GetProductResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{58}
}

func (x *GetProductResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetProductResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetProductResponse) GetProduct() *Product {
	if x != nil {
		return x.Product
	}
	return nil
}

// request parameters for method get_products
type GetProductsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
}

func (x *GetProductsRequest) Reset() {
	*x = GetProductsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductsRequest) ProtoMessage() {}

func (x *GetProductsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductsRequest.ProtoReflect.Descriptor instead.
func (*GetProductsRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{59}
}

func (x *GetProductsRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

// response parameters for method get_products
type GetProductsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// list of inventory product objects
	Products []*Product `protobuf:"bytes,3,rep,name=products,proto3" json:"products,omitempty"`
}

func (x *GetProductsResponse) Reset() {
	*x = GetProductsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductsResponse) ProtoMessage() {}

func (x *GetProductsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductsResponse.ProtoReflect.Descriptor instead.
func (*GetProductsResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{60}
}

func (x *GetProductsResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetProductsResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetProductsResponse) GetProducts() []*Product {
	if x != nil {
		return x.Products
	}
	return nil
}

// request parameters for method create_inventory_item
type CreateInventoryItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// subarea identifier
	SubareaId int64 `protobuf:"varint,2,opt,name=subarea_id,json=subareaId,proto3" json:"subarea_id,omitempty"`
	// inventory item type identifier
	ItemTypeId int32 `protobuf:"varint,3,opt,name=item_type_id,json=itemTypeId,proto3" json:"item_type_id,omitempty"`
	// item quantity
	Quantity int32 `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// item serial number
	SerialNumber string `protobuf:"bytes,5,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	// inventory product identifier
	ProductId int64 `protobuf:"varint,6,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	// data for entity ui extensions
	JsonData string `protobuf:"bytes,7,opt,name=json_data,json=jsonData,proto3" json:"json_data,omitempty"`
}

func (x *CreateInventoryItemRequest) Reset() {
	*x = CreateInventoryItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInventoryItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInventoryItemRequest) ProtoMessage() {}

func (x *CreateInventoryItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInventoryItemRequest.ProtoReflect.Descriptor instead.
func (*CreateInventoryItemRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{61}
}

func (x *CreateInventoryItemRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *CreateInventoryItemRequest) GetSubareaId() int64 {
	if x != nil {
		return x.SubareaId
	}
	return 0
}

func (x *CreateInventoryItemRequest) GetItemTypeId() int32 {
	if x != nil {
		return x.ItemTypeId
	}
	return 0
}

func (x *CreateInventoryItemRequest) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *CreateInventoryItemRequest) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *CreateInventoryItemRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *CreateInventoryItemRequest) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

// response parameters for method create_inventory_item
type CreateInventoryItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// inventory item identifier
	InventoryItemId int64 `protobuf:"varint,4,opt,name=inventory_item_id,json=inventoryItemId,proto3" json:"inventory_item_id,omitempty"`
}

func (x *CreateInventoryItemResponse) Reset() {
	*x = CreateInventoryItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInventoryItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInventoryItemResponse) ProtoMessage() {}

func (x *CreateInventoryItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInventoryItemResponse.ProtoReflect.Descriptor instead.
func (*CreateInventoryItemResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{62}
}

func (x *CreateInventoryItemResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *CreateInventoryItemResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreateInventoryItemResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *CreateInventoryItemResponse) GetInventoryItemId() int64 {
	if x != nil {
		return x.InventoryItemId
	}
	return 0
}

// request parameters for method update_inventory_item
type UpdateInventoryItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// inventory item identifier
	InventoryItemId int64 `protobuf:"varint,2,opt,name=inventory_item_id,json=inventoryItemId,proto3" json:"inventory_item_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// subarea identifier
	SubareaId int64 `protobuf:"varint,4,opt,name=subarea_id,json=subareaId,proto3" json:"subarea_id,omitempty"`
	// inventory item type identifier
	ItemTypeId int32 `protobuf:"varint,5,opt,name=item_type_id,json=itemTypeId,proto3" json:"item_type_id,omitempty"`
	// item quantity
	Quantity int32 `protobuf:"varint,6,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// item serial number
	SerialNumber string `protobuf:"bytes,7,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	// inventory product identifier
	ProductId int64 `protobuf:"varint,8,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	// data for entity ui extensions
	JsonData string `protobuf:"bytes,9,opt,name=json_data,json=jsonData,proto3" json:"json_data,omitempty"`
}

func (x *UpdateInventoryItemRequest) Reset() {
	*x = UpdateInventoryItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInventoryItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInventoryItemRequest) ProtoMessage() {}

func (x *UpdateInventoryItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInventoryItemRequest.ProtoReflect.Descriptor instead.
func (*UpdateInventoryItemRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{63}
}

func (x *UpdateInventoryItemRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *UpdateInventoryItemRequest) GetInventoryItemId() int64 {
	if x != nil {
		return x.InventoryItemId
	}
	return 0
}

func (x *UpdateInventoryItemRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UpdateInventoryItemRequest) GetSubareaId() int64 {
	if x != nil {
		return x.SubareaId
	}
	return 0
}

func (x *UpdateInventoryItemRequest) GetItemTypeId() int32 {
	if x != nil {
		return x.ItemTypeId
	}
	return 0
}

func (x *UpdateInventoryItemRequest) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *UpdateInventoryItemRequest) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *UpdateInventoryItemRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *UpdateInventoryItemRequest) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

// response parameters for method update_inventory_item
type UpdateInventoryItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *UpdateInventoryItemResponse) Reset() {
	*x = UpdateInventoryItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInventoryItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInventoryItemResponse) ProtoMessage() {}

func (x *UpdateInventoryItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInventoryItemResponse.ProtoReflect.Descriptor instead.
func (*UpdateInventoryItemResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{64}
}

func (x *UpdateInventoryItemResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *UpdateInventoryItemResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *UpdateInventoryItemResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method delete_inventory_item
type DeleteInventoryItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// inventory item identifier
	InventoryItemId int64 `protobuf:"varint,2,opt,name=inventory_item_id,json=inventoryItemId,proto3" json:"inventory_item_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteInventoryItemRequest) Reset() {
	*x = DeleteInventoryItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInventoryItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInventoryItemRequest) ProtoMessage() {}

func (x *DeleteInventoryItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInventoryItemRequest.ProtoReflect.Descriptor instead.
func (*DeleteInventoryItemRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{65}
}

func (x *DeleteInventoryItemRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *DeleteInventoryItemRequest) GetInventoryItemId() int64 {
	if x != nil {
		return x.InventoryItemId
	}
	return 0
}

func (x *DeleteInventoryItemRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// response parameters for method delete_inventory_item
type DeleteInventoryItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteInventoryItemResponse) Reset() {
	*x = DeleteInventoryItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInventoryItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInventoryItemResponse) ProtoMessage() {}

func (x *DeleteInventoryItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInventoryItemResponse.ProtoReflect.Descriptor instead.
func (*DeleteInventoryItemResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{66}
}

func (x *DeleteInventoryItemResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *DeleteInventoryItemResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DeleteInventoryItemResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method get_inventory_item
type GetInventoryItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// inventory item identifier
	InventoryItemId int64 `protobuf:"varint,2,opt,name=inventory_item_id,json=inventoryItemId,proto3" json:"inventory_item_id,omitempty"`
}

func (x *GetInventoryItemRequest) Reset() {
	*x = GetInventoryItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInventoryItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryItemRequest) ProtoMessage() {}

func (x *GetInventoryItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryItemRequest.ProtoReflect.Descriptor instead.
func (*GetInventoryItemRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{67}
}

func (x *GetInventoryItemRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *GetInventoryItemRequest) GetInventoryItemId() int64 {
	if x != nil {
		return x.InventoryItemId
	}
	return 0
}

// response parameters for method get_inventory_item
type GetInventoryItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// inventory item object
	InventoryItem *InventoryItem `protobuf:"bytes,3,opt,name=inventory_item,json=inventoryItem,proto3" json:"inventory_item,omitempty"`
}

func (x *GetInventoryItemResponse) Reset() {
	*x = GetInventoryItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInventoryItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryItemResponse) ProtoMessage() {}

func (x *GetInventoryItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryItemResponse.ProtoReflect.Descriptor instead.
func (*GetInventoryItemResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{68}
}

func (x *GetInventoryItemResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetInventoryItemResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetInventoryItemResponse) GetInventoryItem() *InventoryItem {
	if x != nil {
		return x.InventoryItem
	}
	return nil
}

// request parameters for method get_inventory_items_by_product
type GetInventoryItemsByProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// inventory product identifier
	ProductId int64 `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *GetInventoryItemsByProductRequest) Reset() {
	*x = GetInventoryItemsByProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInventoryItemsByProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryItemsByProductRequest) ProtoMessage() {}

func (x *GetInventoryItemsByProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryItemsByProductRequest.ProtoReflect.Descriptor instead.
func (*GetInventoryItemsByProductRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{69}
}

func (x *GetInventoryItemsByProductRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *GetInventoryItemsByProductRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

// response parameters for method get_inventory_items_by_product
type GetInventoryItemsByProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// list of inventory item objects
	InventoryItems []*InventoryItem `protobuf:"bytes,3,rep,name=inventory_items,json=inventoryItems,proto3" json:"inventory_items,omitempty"`
}

func (x *GetInventoryItemsByProductResponse) Reset() {
	*x = GetInventoryItemsByProductResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInventoryItemsByProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryItemsByProductResponse) ProtoMessage() {}

func (x *GetInventoryItemsByProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryItemsByProductResponse.ProtoReflect.Descriptor instead.
func (*GetInventoryItemsByProductResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{70}
}

func (x *GetInventoryItemsByProductResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetInventoryItemsByProductResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetInventoryItemsByProductResponse) GetInventoryItems() []*InventoryItem {
	if x != nil {
		return x.InventoryItems
	}
	return nil
}

// request parameters for method get_inventory_items_by_subarea
type GetInventoryItemsBySubareaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// subarea identifier
	SubareaId int64 `protobuf:"varint,2,opt,name=subarea_id,json=subareaId,proto3" json:"subarea_id,omitempty"`
}

func (x *GetInventoryItemsBySubareaRequest) Reset() {
	*x = GetInventoryItemsBySubareaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInventoryItemsBySubareaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryItemsBySubareaRequest) ProtoMessage() {}

func (x *GetInventoryItemsBySubareaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryItemsBySubareaRequest.ProtoReflect.Descriptor instead.
func (*GetInventoryItemsBySubareaRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{71}
}

func (x *GetInventoryItemsBySubareaRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *GetInventoryItemsBySubareaRequest) GetSubareaId() int64 {
	if x != nil {
		return x.SubareaId
	}
	return 0
}

// response parameters for method get_inventory_items_by_subarea
type GetInventoryItemsBySubareaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// list of inventory item objects
	InventoryItems []*InventoryItem `protobuf:"bytes,3,rep,name=inventory_items,json=inventoryItems,proto3" json:"inventory_items,omitempty"`
}

func (x *GetInventoryItemsBySubareaResponse) Reset() {
	*x = GetInventoryItemsBySubareaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInventoryItemsBySubareaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryItemsBySubareaResponse) ProtoMessage() {}

func (x *GetInventoryItemsBySubareaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryItemsBySubareaResponse.ProtoReflect.Descriptor instead.
func (*GetInventoryItemsBySubareaResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{72}
}

func (x *GetInventoryItemsBySubareaResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetInventoryItemsBySubareaResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetInventoryItemsBySubareaResponse) GetInventoryItems() []*InventoryItem {
	if x != nil {
		return x.InventoryItems
	}
	return nil
}

// request parameters for method get_inventory_items_by_facility
type GetInventoryItemsByFacilityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// facility identifier
	FacilityId int64 `protobuf:"varint,2,opt,name=facility_id,json=facilityId,proto3" json:"facility_id,omitempty"`
}

func (x *GetInventoryItemsByFacilityRequest) Reset() {
	*x = GetInventoryItemsByFacilityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInventoryItemsByFacilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryItemsByFacilityRequest) ProtoMessage() {}

func (x *GetInventoryItemsByFacilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryItemsByFacilityRequest.ProtoReflect.Descriptor instead.
func (*GetInventoryItemsByFacilityRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{73}
}

func (x *GetInventoryItemsByFacilityRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *GetInventoryItemsByFacilityRequest) GetFacilityId() int64 {
	if x != nil {
		return x.FacilityId
	}
	return 0
}

// response parameters for method get_inventory_items_by_facility
type GetInventoryItemsByFacilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// list of inventory item objects
	InventoryItems []*InventoryItem `protobuf:"bytes,3,rep,name=inventory_items,json=inventoryItems,proto3" json:"inventory_items,omitempty"`
}

func (x *GetInventoryItemsByFacilityResponse) Reset() {
	*x = GetInventoryItemsByFacilityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInventoryItemsByFacilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryItemsByFacilityResponse) ProtoMessage() {}

func (x *GetInventoryItemsByFacilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryItemsByFacilityResponse.ProtoReflect.Descriptor instead.
func (*GetInventoryItemsByFacilityResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{74}
}

func (x *GetInventoryItemsByFacilityResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetInventoryItemsByFacilityResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetInventoryItemsByFacilityResponse) GetInventoryItems() []*InventoryItem {
	if x != nil {
		return x.InventoryItems
	}
	return nil
}

// request parameters for method get_server_version
type GetServerVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// placeholder param to avoid empty message
	DummyParam int32 `protobuf:"varint,1,opt,name=dummy_param,json=dummyParam,proto3" json:"dummy_param,omitempty"`
}

func (x *GetServerVersionRequest) Reset() {
	*x = GetServerVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerVersionRequest) ProtoMessage() {}

func (x *GetServerVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerVersionRequest.ProtoReflect.Descriptor instead.
func (*GetServerVersionRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{75}
}

func (x *GetServerVersionRequest) GetDummyParam() int32 {
	if x != nil {
		return x.DummyParam
	}
	return 0
}

// response parameters for method get_server_version
type GetServerVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version level of server
	ServerVersion string `protobuf:"bytes,3,opt,name=server_version,json=serverVersion,proto3" json:"server_version,omitempty"`
	// server uptime in seconds
	ServerUptime int64 `protobuf:"varint,4,opt,name=server_uptime,json=serverUptime,proto3" json:"server_uptime,omitempty"`
}

func (x *GetServerVersionResponse) Reset() {
	*x = GetServerVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerVersionResponse) ProtoMessage() {}

func (x *GetServerVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerVersionResponse.ProtoReflect.Descriptor instead.
func (*GetServerVersionResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{76}
}

func (x *GetServerVersionResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetServerVersionResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetServerVersionResponse) GetServerVersion() string {
	if x != nil {
		return x.ServerVersion
	}
	return ""
}

func (x *GetServerVersionResponse) GetServerUptime() int64 {
	if x != nil {
		return x.ServerUptime
	}
	return 0
}

// request parameters for method create_entity_schema
type CreateEntitySchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// name of entity to be extended
	EntityName string `protobuf:"bytes,2,opt,name=entity_name,json=entityName,proto3" json:"entity_name,omitempty"`
	// schema for json_data extensions
	JsonSchema string `protobuf:"bytes,3,opt,name=json_schema,json=jsonSchema,proto3" json:"json_schema,omitempty"`
}

func (x *CreateEntitySchemaRequest) Reset() {
	*x = CreateEntitySchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEntitySchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEntitySchemaRequest) ProtoMessage() {}

func (x *CreateEntitySchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEntitySchemaRequest.ProtoReflect.Descriptor instead.
func (*CreateEntitySchemaRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{77}
}

func (x *CreateEntitySchemaRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *CreateEntitySchemaRequest) GetEntityName() string {
	if x != nil {
		return x.EntityName
	}
	return ""
}

func (x *CreateEntitySchemaRequest) GetJsonSchema() string {
	if x != nil {
		return x.JsonSchema
	}
	return ""
}

// response parameters for method create_entity_schema
type CreateEntitySchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *CreateEntitySchemaResponse) Reset() {
	*x = CreateEntitySchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEntitySchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEntitySchemaResponse) ProtoMessage() {}

func (x *CreateEntitySchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEntitySchemaResponse.ProtoReflect.Descriptor instead.
func (*CreateEntitySchemaResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{78}
}

func (x *CreateEntitySchemaResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *CreateEntitySchemaResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreateEntitySchemaResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method update_entity_schema
type UpdateEntitySchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// name of entity to be extended
	EntityName string `protobuf:"bytes,2,opt,name=entity_name,json=entityName,proto3" json:"entity_name,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// schema for json_data extensions
	JsonSchema string `protobuf:"bytes,4,opt,name=json_schema,json=jsonSchema,proto3" json:"json_schema,omitempty"`
}

func (x *UpdateEntitySchemaRequest) Reset() {
	*x = UpdateEntitySchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEntitySchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEntitySchemaRequest) ProtoMessage() {}

func (x *UpdateEntitySchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEntitySchemaRequest.ProtoReflect.Descriptor instead.
func (*UpdateEntitySchemaRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{79}
}

func (x *UpdateEntitySchemaRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *UpdateEntitySchemaRequest) GetEntityName() string {
	if x != nil {
		return x.EntityName
	}
	return ""
}

func (x *UpdateEntitySchemaRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UpdateEntitySchemaRequest) GetJsonSchema() string {
	if x != nil {
		return x.JsonSchema
	}
	return ""
}

// response parameters for method update_entity_schema
type UpdateEntitySchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *UpdateEntitySchemaResponse) Reset() {
	*x = UpdateEntitySchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEntitySchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEntitySchemaResponse) ProtoMessage() {}

func (x *UpdateEntitySchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEntitySchemaResponse.ProtoReflect.Descriptor instead.
func (*UpdateEntitySchemaResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{80}
}

func (x *UpdateEntitySchemaResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *UpdateEntitySchemaResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *UpdateEntitySchemaResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method delete_entity_schema
type DeleteEntitySchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// name of entity to be extended
	EntityName string `protobuf:"bytes,2,opt,name=entity_name,json=entityName,proto3" json:"entity_name,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteEntitySchemaRequest) Reset() {
	*x = DeleteEntitySchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEntitySchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEntitySchemaRequest) ProtoMessage() {}

func (x *DeleteEntitySchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEntitySchemaRequest.ProtoReflect.Descriptor instead.
func (*DeleteEntitySchemaRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{81}
}

func (x *DeleteEntitySchemaRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *DeleteEntitySchemaRequest) GetEntityName() string {
	if x != nil {
		return x.EntityName
	}
	return ""
}

func (x *DeleteEntitySchemaRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// response parameters for method delete_entity_schema
type DeleteEntitySchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteEntitySchemaResponse) Reset() {
	*x = DeleteEntitySchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEntitySchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEntitySchemaResponse) ProtoMessage() {}

func (x *DeleteEntitySchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEntitySchemaResponse.ProtoReflect.Descriptor instead.
func (*DeleteEntitySchemaResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{82}
}

func (x *DeleteEntitySchemaResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *DeleteEntitySchemaResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DeleteEntitySchemaResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method get_entity_schema
type GetEntitySchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// name of entity to be extended
	EntityName string `protobuf:"bytes,2,opt,name=entity_name,json=entityName,proto3" json:"entity_name,omitempty"`
}

func (x *GetEntitySchemaRequest) Reset() {
	*x = GetEntitySchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntitySchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntitySchemaRequest) ProtoMessage() {}

func (x *GetEntitySchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntitySchemaRequest.ProtoReflect.Descriptor instead.
func (*GetEntitySchemaRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{83}
}

func (x *GetEntitySchemaRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *GetEntitySchemaRequest) GetEntityName() string {
	if x != nil {
		return x.EntityName
	}
	return ""
}

// response parameters for method get_entity_schema
type GetEntitySchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// single entity schema object
	EntitySchema *EntitySchema `protobuf:"bytes,3,opt,name=entity_schema,json=entitySchema,proto3" json:"entity_schema,omitempty"`
}

func (x *GetEntitySchemaResponse) Reset() {
	*x = GetEntitySchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntitySchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntitySchemaResponse) ProtoMessage() {}

func (x *GetEntitySchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntitySchemaResponse.ProtoReflect.Descriptor instead.
func (*GetEntitySchemaResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{84}
}

func (x *GetEntitySchemaResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetEntitySchemaResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetEntitySchemaResponse) GetEntitySchema() *EntitySchema {
	if x != nil {
		return x.EntitySchema
	}
	return nil
}

// request parameters for method get_entity_schemas
type GetEntitySchemasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
}

func (x *GetEntitySchemasRequest) Reset() {
	*x = GetEntitySchemasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntitySchemasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntitySchemasRequest) ProtoMessage() {}

func (x *GetEntitySchemasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntitySchemasRequest.ProtoReflect.Descriptor instead.
func (*GetEntitySchemasRequest) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{85}
}

func (x *GetEntitySchemasRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

// response parameters for method get_entity_schemas
type GetEntitySchemasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// list of  entity schema objects
	EntitySchemas []*EntitySchema `protobuf:"bytes,3,rep,name=entity_schemas,json=entitySchemas,proto3" json:"entity_schemas,omitempty"`
}

func (x *GetEntitySchemasResponse) Reset() {
	*x = GetEntitySchemasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceInventory_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntitySchemasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntitySchemasResponse) ProtoMessage() {}

func (x *GetEntitySchemasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceInventory_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntitySchemasResponse.ProtoReflect.Descriptor instead.
func (*GetEntitySchemasResponse) Descriptor() ([]byte, []int) {
	return file_MServiceInventory_proto_rawDescGZIP(), []int{86}
}

func (x *GetEntitySchemasResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetEntitySchemasResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetEntitySchemasResponse) GetEntitySchemas() []*EntitySchema {
	if x != nil {
		return x.EntitySchemas
	}
	return nil
}

var File_MServiceInventory_proto protoreflect.FileDescriptor

var file_MServiceInventory_proto_rawDesc = []byte{
	0x0a, 0x17, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x6f, 0x72, 0x67, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x1a, 0x12, 0x44, 0x6d, 0x6c, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc4,
	0x02, 0x0a, 0x08, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x66,
	0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x12, 0x27, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x61, 0x63, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x73, 0x6f, 0x6e,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0xa3, 0x03, 0x0a, 0x0f, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x63,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d,
	0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x27,
	0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x56, 0x0a, 0x0e, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x73, 0x75, 0x62,
	0x61, 0x72, 0x65, 0x61, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x75,
	0x62, 0x61, 0x72, 0x65, 0x61, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x0d, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x73, 0x22, 0xb8, 0x02, 0x0a, 0x0b,
	0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x29, 0x0a,
	0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x08,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e,
	0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x75,
	0x62, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa9, 0x02, 0x0a, 0x08, 0x49, 0x74, 0x65, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x29, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d,
	0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0xa1, 0x04, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x27, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x12, 0x27, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x61, 0x63, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x61,
	0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62,
	0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x75, 0x62,
	0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x75,
	0x62, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65,
	0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75,
	0x62, 0x61, 0x72, 0x65, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x73, 0x6f,
	0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x80, 0x05, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x61, 0x72,
	0x65, 0x61, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62,
	0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e,
	0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x29, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x07,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a,
	0x0f, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x56, 0x0a, 0x0e, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x73, 0x75, 0x62, 0x61, 0x72,
	0x65, 0x61, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x75, 0x62, 0x61,
	0x72, 0x65, 0x61, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x0d, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x73, 0x22, 0xeb, 0x02, 0x0a, 0x07, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x29, 0x0a,
	0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x08,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e,
	0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x6b, 0x75, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x6b, 0x75, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x73,
	0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a,
	0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x99, 0x04, 0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x29,
	0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c,
	0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0e, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x22, 0xa7, 0x02, 0x0a, 0x0c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x29, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d,
	0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x7a, 0x0a,
	0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61, 0x63, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x97, 0x01, 0x0a, 0x16, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x22, 0xb5, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61,
	0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61, 0x63,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x76, 0x0a, 0x16, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x73, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x61, 0x63,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x76, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x56, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x63, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x61,
	0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0xa0, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x45, 0x0a, 0x08, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x52, 0x08, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x37, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x22, 0xa6, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x49, 0x0a, 0x0a, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x52, 0x0a, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x5d, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x57, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66,
	0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0xbd, 0x01, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x57, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x5b, 0x0a, 0x10, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x61, 0x63, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x0f, 0x66, 0x61, 0x63,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x22, 0x8f, 0x01, 0x0a,
	0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x75,
	0x62, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73,
	0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x79,
	0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xa9, 0x01, 0x0a, 0x18, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x61, 0x72,
	0x65, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x75, 0x62,
	0x61, 0x72, 0x65, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x79, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x7d, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0f, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x79, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x60, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73,
	0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0xad, 0x01, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4f, 0x0a, 0x0c, 0x73,
	0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65,
	0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0b, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x22, 0x39, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0xb0, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x51, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x61, 0x72,
	0x65, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x73, 0x75,
	0x62, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x15, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x74, 0x65,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x76, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x9a, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x76, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x74, 0x0a, 0x15, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x76, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x57, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x22, 0xa1, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x46, 0x0a,
	0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x69, 0x74, 0x65,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x22, 0x36, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0xa4, 0x01,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x22, 0x88, 0x02, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x2a, 0x0a, 0x11, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65,
	0x61, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x61, 0x72,
	0x65, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x94, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x61, 0x72,
	0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x75, 0x62,
	0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x22, 0xa0, 0x02, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x61,
	0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x61,
	0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62,
	0x61, 0x72, 0x65, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x75, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x70, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62,
	0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x75, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x61,
	0x72, 0x65, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x53, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x22, 0x9c,
	0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x73, 0x75, 0x62,
	0x61, 0x72, 0x65, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x75, 0x62,
	0x61, 0x72, 0x65, 0x61, 0x52, 0x07, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x22, 0x56, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x61, 0x63, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x9f, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62,
	0x61, 0x72, 0x65, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x44, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x52, 0x08, 0x73,
	0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x73, 0x22, 0xa3, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6b, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x73, 0x6b, 0x75, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x94, 0x01,
	0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x22, 0xdc, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6b, 0x75, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x6b, 0x75, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x75, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x70, 0x0a, 0x14, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x75, 0x0a, 0x15,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x53, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x9c, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x35, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x9f,
	0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x22, 0xfb, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0xa7,
	0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11,
	0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0xc1, 0x02, 0x0a, 0x1a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0c, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x7b, 0x0a, 0x1b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x83, 0x01, 0x0a, 0x1a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x7b, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x66, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x22, 0xb5, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x55, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0d, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x63, 0x0a, 0x21,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x22, 0xc1, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x57, 0x0a, 0x0f,
	0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x63, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x53, 0x75, 0x62, 0x61,
	0x72, 0x65, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x22, 0xc1, 0x01, 0x0a, 0x22, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x42, 0x79, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x57, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0e,
	0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x66,
	0x0a, 0x22, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x42, 0x79, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x61, 0x63, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0xc2, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x46, 0x61,
	0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x57, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x49, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0e, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x3a, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x75, 0x6d,
	0x6d, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x22, 0xaa, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x70,
	0x74, 0x69, 0x6d, 0x65, 0x22, 0x7e, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x22, 0x7a, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x98, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6a, 0x73,
	0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x7a, 0x0a, 0x1a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x77, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x7a, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x5a, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x0c,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x3a, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0xb4, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x54, 0x0a, 0x0e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65,
	0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x52, 0x0d, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x32,
	0x8e, 0x2a, 0x0a, 0x11, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x82, 0x01, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65,
	0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x0f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x36,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x82, 0x01, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x66, 0x61, 0x63, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x61, 0x63, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x5f, 0x66, 0x61, 0x63, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x33, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x7f, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x5f, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x35, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65,
	0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x61,
	0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x8f, 0x01, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x5f, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x5f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x3a, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x13, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x75,
	0x62, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x39, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75,
	0x62, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x8c, 0x01, 0x0a, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x75, 0x62,
	0x61, 0x72, 0x65, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x39, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62,
	0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x8c, 0x01, 0x0a, 0x13, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x61,
	0x72, 0x65, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x39, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x61,
	0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x83, 0x01, 0x0a, 0x10, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x75,
	0x62, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83,
	0x01, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65,
	0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x10, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x7a, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x33, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65,
	0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x0e,
	0x67, 0x65, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x34,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x0e, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x12, 0x35, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62,
	0x61, 0x72, 0x65, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x0e,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x12, 0x35,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75,
	0x62, 0x61, 0x72, 0x65, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a,
	0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x12,
	0x35, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76,
	0x0a, 0x0b, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x12, 0x32, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x33, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65,
	0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x75,
	0x62, 0x61, 0x72, 0x65, 0x61, 0x73, 0x12, 0x33, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x61,
	0x72, 0x65, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x7f, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x12, 0x35, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x7f, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x12, 0x35, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x35, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x12, 0x32, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a, 0x0c,
	0x67, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x33, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x34, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65,
	0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x92, 0x01, 0x0a, 0x15, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x12, 0x3b, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65,
	0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x92, 0x01, 0x0a,
	0x15, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x3b, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x92, 0x01, 0x0a, 0x15, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x3b, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x38, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0xa9, 0x01, 0x0a, 0x1e, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x42, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x43, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa9,
	0x01, 0x0a, 0x1e, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x73, 0x75, 0x62, 0x61, 0x72, 0x65,
	0x61, 0x12, 0x42, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65,
	0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x53, 0x75, 0x62, 0x61, 0x72, 0x65, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x43, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x53, 0x75, 0x62, 0x61, 0x72,
	0x65, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xac, 0x01, 0x0a, 0x1f, 0x67,
	0x65, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x43,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x42, 0x79, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x12, 0x67, 0x65,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x38, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8f, 0x01, 0x0a, 0x14, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x3a,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8f, 0x01, 0x0a, 0x14, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x12, 0x3a, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8f, 0x01, 0x0a, 0x14, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x12, 0x3a, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x11,
	0x67, 0x65, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x12, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65,
	0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x12, 0x38, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x49, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0xaa, 0x02, 0x11, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_MServiceInventory_proto_rawDescOnce sync.Once
	file_MServiceInventory_proto_rawDescData = file_MServiceInventory_proto_rawDesc
)

func file_MServiceInventory_proto_rawDescGZIP() []byte {
	file_MServiceInventory_proto_rawDescOnce.Do(func() {
		file_MServiceInventory_proto_rawDescData = protoimpl.X.CompressGZIP(file_MServiceInventory_proto_rawDescData)
	})
	return file_MServiceInventory_proto_rawDescData
}

var file_MServiceInventory_proto_msgTypes = make([]protoimpl.MessageInfo, 87)
var file_MServiceInventory_proto_goTypes = []interface{}{
	(*Facility)(nil),                            // 0: org.gaterace.mservice.inventory.Facility
	(*FacilityWrapper)(nil),                     // 1: org.gaterace.mservice.inventory.FacilityWrapper
	(*SubareaType)(nil),                         // 2: org.gaterace.mservice.inventory.SubareaType
	(*ItemType)(nil),                            // 3: org.gaterace.mservice.inventory.ItemType
	(*Subarea)(nil),                             // 4: org.gaterace.mservice.inventory.Subarea
	(*SubareaWrapper)(nil),                      // 5: org.gaterace.mservice.inventory.SubareaWrapper
	(*Product)(nil),                             // 6: org.gaterace.mservice.inventory.Product
	(*InventoryItem)(nil),                       // 7: org.gaterace.mservice.inventory.InventoryItem
	(*EntitySchema)(nil),                        // 8: org.gaterace.mservice.inventory.EntitySchema
	(*CreateFacilityRequest)(nil),               // 9: org.gaterace.mservice.inventory.CreateFacilityRequest
	(*CreateFacilityResponse)(nil),              // 10: org.gaterace.mservice.inventory.CreateFacilityResponse
	(*UpdateFacilityRequest)(nil),               // 11: org.gaterace.mservice.inventory.UpdateFacilityRequest
	(*UpdateFacilityResponse)(nil),              // 12: org.gaterace.mservice.inventory.UpdateFacilityResponse
	(*DeleteFacilityRequest)(nil),               // 13: org.gaterace.mservice.inventory.DeleteFacilityRequest
	(*DeleteFacilityResponse)(nil),              // 14: org.gaterace.mservice.inventory.DeleteFacilityResponse
	(*GetFacilityRequest)(nil),                  // 15: org.gaterace.mservice.inventory.GetFacilityRequest
	(*GetFacilityResponse)(nil),                 // 16: org.gaterace.mservice.inventory.GetFacilityResponse
	(*GetFacilitiesRequest)(nil),                // 17: org.gaterace.mservice.inventory.GetFacilitiesRequest
	(*GetFacilitiesResponse)(nil),               // 18: org.gaterace.mservice.inventory.GetFacilitiesResponse
	(*GetFacilityWrapperRequest)(nil),           // 19: org.gaterace.mservice.inventory.GetFacilityWrapperRequest
	(*GetFacilityWrapperResponse)(nil),          // 20: org.gaterace.mservice.inventory.GetFacilityWrapperResponse
	(*CreateSubareaTypeRequest)(nil),            // 21: org.gaterace.mservice.inventory.CreateSubareaTypeRequest
	(*CreateSubareaTypeResponse)(nil),           // 22: org.gaterace.mservice.inventory.CreateSubareaTypeResponse
	(*UpdateSubareaTypeRequest)(nil),            // 23: org.gaterace.mservice.inventory.UpdateSubareaTypeRequest
	(*UpdateSubareaTypeResponse)(nil),           // 24: org.gaterace.mservice.inventory.UpdateSubareaTypeResponse
	(*DeleteSubareaTypeRequest)(nil),            // 25: org.gaterace.mservice.inventory.DeleteSubareaTypeRequest
	(*DeleteSubareaTypeResponse)(nil),           // 26: org.gaterace.mservice.inventory.DeleteSubareaTypeResponse
	(*GetSubareaTypeRequest)(nil),               // 27: org.gaterace.mservice.inventory.GetSubareaTypeRequest
	(*GetSubareaTypeResponse)(nil),              // 28: org.gaterace.mservice.inventory.GetSubareaTypeResponse
	(*GetSubareaTypesRequest)(nil),              // 29: org.gaterace.mservice.inventory.GetSubareaTypesRequest
	(*GetSubareaTypesResponse)(nil),             // 30: org.gaterace.mservice.inventory.GetSubareaTypesResponse
	(*CreateItemTypeRequest)(nil),               // 31: org.gaterace.mservice.inventory.CreateItemTypeRequest
	(*CreateItemTypeResponse)(nil),              // 32: org.gaterace.mservice.inventory.CreateItemTypeResponse
	(*UpdateItemTypeRequest)(nil),               // 33: org.gaterace.mservice.inventory.UpdateItemTypeRequest
	(*UpdateItemTypeResponse)(nil),              // 34: org.gaterace.mservice.inventory.UpdateItemTypeResponse
	(*DeleteItemTypeRequest)(nil),               // 35: org.gaterace.mservice.inventory.DeleteItemTypeRequest
	(*DeleteItemTypeResponse)(nil),              // 36: org.gaterace.mservice.inventory.DeleteItemTypeResponse
	(*GetItemTypeRequest)(nil),                  // 37: org.gaterace.mservice.inventory.GetItemTypeRequest
	(*GetItemTypeResponse)(nil),                 // 38: org.gaterace.mservice.inventory.GetItemTypeResponse
	(*GetItemTypesRequest)(nil),                 // 39: org.gaterace.mservice.inventory.GetItemTypesRequest
	(*GetItemTypesResponse)(nil),                // 40: org.gaterace.mservice.inventory.GetItemTypesResponse
	(*CreateSubareaRequest)(nil),                // 41: org.gaterace.mservice.inventory.CreateSubareaRequest
	(*CreateSubareaResponse)(nil),               // 42: org.gaterace.mservice.inventory.CreateSubareaResponse
	(*UpdateSubareaRequest)(nil),                // 43: org.gaterace.mservice.inventory.UpdateSubareaRequest
	(*UpdateSubareaResponse)(nil),               // 44: org.gaterace.mservice.inventory.UpdateSubareaResponse
	(*DeleteSubareaRequest)(nil),                // 45: org.gaterace.mservice.inventory.DeleteSubareaRequest
	(*DeleteSubareaResponse)(nil),               // 46: org.gaterace.mservice.inventory.DeleteSubareaResponse
	(*GetSubareaRequest)(nil),                   // 47: org.gaterace.mservice.inventory.GetSubareaRequest
	(*GetSubareaResponse)(nil),                  // 48: org.gaterace.mservice.inventory.GetSubareaResponse
	(*GetSubareasRequest)(nil),                  // 49: org.gaterace.mservice.inventory.GetSubareasRequest
	(*GetSubareasResponse)(nil),                 // 50: org.gaterace.mservice.inventory.GetSubareasResponse
	(*CreateProductRequest)(nil),                // 51: org.gaterace.mservice.inventory.CreateProductRequest
	(*CreateProductResponse)(nil),               // 52: org.gaterace.mservice.inventory.CreateProductResponse
	(*UpdateProductRequest)(nil),                // 53: org.gaterace.mservice.inventory.UpdateProductRequest
	(*UpdateProductResponse)(nil),               // 54: org.gaterace.mservice.inventory.UpdateProductResponse
	(*DeleteProductRequest)(nil),                // 55: org.gaterace.mservice.inventory.DeleteProductRequest
	(*DeleteProductResponse)(nil),               // 56: org.gaterace.mservice.inventory.DeleteProductResponse
	(*GetProductRequest)(nil),                   // 57: org.gaterace.mservice.inventory.GetProductRequest
	(*GetProductResponse)(nil),                  // 58: org.gaterace.mservice.inventory.GetProductResponse
	(*GetProductsRequest)(nil),                  // 59: org.gaterace.mservice.inventory.GetProductsRequest
	(*GetProductsResponse)(nil),                 // 60: org.gaterace.mservice.inventory.GetProductsResponse
	(*CreateInventoryItemRequest)(nil),          // 61: org.gaterace.mservice.inventory.CreateInventoryItemRequest
	(*CreateInventoryItemResponse)(nil),         // 62: org.gaterace.mservice.inventory.CreateInventoryItemResponse
	(*UpdateInventoryItemRequest)(nil),          // 63: org.gaterace.mservice.inventory.UpdateInventoryItemRequest
	(*UpdateInventoryItemResponse)(nil),         // 64: org.gaterace.mservice.inventory.UpdateInventoryItemResponse
	(*DeleteInventoryItemRequest)(nil),          // 65: org.gaterace.mservice.inventory.DeleteInventoryItemRequest
	(*DeleteInventoryItemResponse)(nil),         // 66: org.gaterace.mservice.inventory.DeleteInventoryItemResponse
	(*GetInventoryItemRequest)(nil),             // 67: org.gaterace.mservice.inventory.GetInventoryItemRequest
	(*GetInventoryItemResponse)(nil),            // 68: org.gaterace.mservice.inventory.GetInventoryItemResponse
	(*GetInventoryItemsByProductRequest)(nil),   // 69: org.gaterace.mservice.inventory.GetInventoryItemsByProductRequest
	(*GetInventoryItemsByProductResponse)(nil),  // 70: org.gaterace.mservice.inventory.GetInventoryItemsByProductResponse
	(*GetInventoryItemsBySubareaRequest)(nil),   // 71: org.gaterace.mservice.inventory.GetInventoryItemsBySubareaRequest
	(*GetInventoryItemsBySubareaResponse)(nil),  // 72: org.gaterace.mservice.inventory.GetInventoryItemsBySubareaResponse
	(*GetInventoryItemsByFacilityRequest)(nil),  // 73: org.gaterace.mservice.inventory.GetInventoryItemsByFacilityRequest
	(*GetInventoryItemsByFacilityResponse)(nil), // 74: org.gaterace.mservice.inventory.GetInventoryItemsByFacilityResponse
	(*GetServerVersionRequest)(nil),             // 75: org.gaterace.mservice.inventory.GetServerVersionRequest
	(*GetServerVersionResponse)(nil),            // 76: org.gaterace.mservice.inventory.GetServerVersionResponse
	(*CreateEntitySchemaRequest)(nil),           // 77: org.gaterace.mservice.inventory.CreateEntitySchemaRequest
	(*CreateEntitySchemaResponse)(nil),          // 78: org.gaterace.mservice.inventory.CreateEntitySchemaResponse
	(*UpdateEntitySchemaRequest)(nil),           // 79: org.gaterace.mservice.inventory.UpdateEntitySchemaRequest
	(*UpdateEntitySchemaResponse)(nil),          // 80: org.gaterace.mservice.inventory.UpdateEntitySchemaResponse
	(*DeleteEntitySchemaRequest)(nil),           // 81: org.gaterace.mservice.inventory.DeleteEntitySchemaRequest
	(*DeleteEntitySchemaResponse)(nil),          // 82: org.gaterace.mservice.inventory.DeleteEntitySchemaResponse
	(*GetEntitySchemaRequest)(nil),              // 83: org.gaterace.mservice.inventory.GetEntitySchemaRequest
	(*GetEntitySchemaResponse)(nil),             // 84: org.gaterace.mservice.inventory.GetEntitySchemaResponse
	(*GetEntitySchemasRequest)(nil),             // 85: org.gaterace.mservice.inventory.GetEntitySchemasRequest
	(*GetEntitySchemasResponse)(nil),            // 86: org.gaterace.mservice.inventory.GetEntitySchemasResponse
	(*dml.DateTime)(nil),                        // 87: dml.DateTime
}
var file_MServiceInventory_proto_depIdxs = []int32{
	87, // 0: org.gaterace.mservice.inventory.Facility.created:type_name -> dml.DateTime
	87, // 1: org.gaterace.mservice.inventory.Facility.modified:type_name -> dml.DateTime
	87, // 2: org.gaterace.mservice.inventory.Facility.deleted:type_name -> dml.DateTime
	87, // 3: org.gaterace.mservice.inventory.FacilityWrapper.created:type_name -> dml.DateTime
	87, // 4: org.gaterace.mservice.inventory.FacilityWrapper.modified:type_name -> dml.DateTime
	87, // 5: org.gaterace.mservice.inventory.FacilityWrapper.deleted:type_name -> dml.DateTime
	5,  // 6: org.gaterace.mservice.inventory.FacilityWrapper.child_subareas:type_name -> org.gaterace.mservice.inventory.SubareaWrapper
	87, // 7: org.gaterace.mservice.inventory.SubareaType.created:type_name -> dml.DateTime
	87, // 8: org.gaterace.mservice.inventory.SubareaType.modified:type_name -> dml.DateTime
	87, // 9: org.gaterace.mservice.inventory.SubareaType.deleted:type_name -> dml.DateTime
	87, // 10: org.gaterace.mservice.inventory.ItemType.created:type_name -> dml.DateTime
	87, // 11: org.gaterace.mservice.inventory.ItemType.modified:type_name -> dml.DateTime
	87, // 12: org.gaterace.mservice.inventory.ItemType.deleted:type_name -> dml.DateTime
	87, // 13: org.gaterace.mservice.inventory.Subarea.created:type_name -> dml.DateTime
	87, // 14: org.gaterace.mservice.inventory.Subarea.modified:type_name -> dml.DateTime
	87, // 15: org.gaterace.mservice.inventory.Subarea.deleted:type_name -> dml.DateTime
	87, // 16: org.gaterace.mservice.inventory.SubareaWrapper.created:type_name -> dml.DateTime
	87, // 17: org.gaterace.mservice.inventory.SubareaWrapper.modified:type_name -> dml.DateTime
	87, // 18: org.gaterace.mservice.inventory.SubareaWrapper.deleted:type_name -> dml.DateTime
	5,  // 19: org.gaterace.mservice.inventory.SubareaWrapper.child_subareas:type_name -> org.gaterace.mservice.inventory.SubareaWrapper
	87, // 20: org.gaterace.mservice.inventory.Product.created:type_name -> dml.DateTime
	87, // 21: org.gaterace.mservice.inventory.Product.modified:type_name -> dml.DateTime
	87, // 22: org.gaterace.mservice.inventory.Product.deleted:type_name -> dml.DateTime
	87, // 23: org.gaterace.mservice.inventory.InventoryItem.created:type_name -> dml.DateTime
	87, // 24: org.gaterace.mservice.inventory.InventoryItem.modified:type_name -> dml.DateTime
	87, // 25: org.gaterace.mservice.inventory.InventoryItem.deleted:type_name -> dml.DateTime
	87, // 26: org.gaterace.mservice.inventory.EntitySchema.created:type_name -> dml.DateTime
	87, // 27: org.gaterace.mservice.inventory.EntitySchema.modified:type_name -> dml.DateTime
	87, // 28: org.gaterace.mservice.inventory.EntitySchema.deleted:type_name -> dml.DateTime
	0,  // 29: org.gaterace.mservice.inventory.GetFacilityResponse.facility:type_name -> org.gaterace.mservice.inventory.Facility
	0,  // 30: org.gaterace.mservice.inventory.GetFacilitiesResponse.facilities:type_name -> org.gaterace.mservice.inventory.Facility
	1,  // 31: org.gaterace.mservice.inventory.GetFacilityWrapperResponse.facility_wrapper:type_name -> org.gaterace.mservice.inventory.FacilityWrapper
	2,  // 32: org.gaterace.mservice.inventory.GetSubareaTypeResponse.subarea_type:type_name -> org.gaterace.mservice.inventory.SubareaType
	2,  // 33: org.gaterace.mservice.inventory.GetSubareaTypesResponse.subarea_types:type_name -> org.gaterace.mservice.inventory.SubareaType
	3,  // 34: org.gaterace.mservice.inventory.GetItemTypeResponse.item_type:type_name -> org.gaterace.mservice.inventory.ItemType
	3,  // 35: org.gaterace.mservice.inventory.GetItemTypesResponse.item_types:type_name -> org.gaterace.mservice.inventory.ItemType
	4,  // 36: org.gaterace.mservice.inventory.GetSubareaResponse.subarea:type_name -> org.gaterace.mservice.inventory.Subarea
	4,  // 37: org.gaterace.mservice.inventory.GetSubareasResponse.subareas:type_name -> org.gaterace.mservice.inventory.Subarea
	6,  // 38: org.gaterace.mservice.inventory.GetProductResponse.product:type_name -> org.gaterace.mservice.inventory.Product
	6,  // 39: org.gaterace.mservice.inventory.GetProductsResponse.products:type_name -> org.gaterace.mservice.inventory.Product
	7,  // 40: org.gaterace.mservice.inventory.GetInventoryItemResponse.inventory_item:type_name -> org.gaterace.mservice.inventory.InventoryItem
	7,  // 41: org.gaterace.mservice.inventory.GetInventoryItemsByProductResponse.inventory_items:type_name -> org.gaterace.mservice.inventory.InventoryItem
	7,  // 42: org.gaterace.mservice.inventory.GetInventoryItemsBySubareaResponse.inventory_items:type_name -> org.gaterace.mservice.inventory.InventoryItem
	7,  // 43: org.gaterace.mservice.inventory.GetInventoryItemsByFacilityResponse.inventory_items:type_name -> org.gaterace.mservice.inventory.InventoryItem
	8,  // 44: org.gaterace.mservice.inventory.GetEntitySchemaResponse.entity_schema:type_name -> org.gaterace.mservice.inventory.EntitySchema
	8,  // 45: org.gaterace.mservice.inventory.GetEntitySchemasResponse.entity_schemas:type_name -> org.gaterace.mservice.inventory.EntitySchema
	9,  // 46: org.gaterace.mservice.inventory.MServiceInventory.create_facility:input_type -> org.gaterace.mservice.inventory.CreateFacilityRequest
	11, // 47: org.gaterace.mservice.inventory.MServiceInventory.update_facility:input_type -> org.gaterace.mservice.inventory.UpdateFacilityRequest
	13, // 48: org.gaterace.mservice.inventory.MServiceInventory.delete_facility:input_type -> org.gaterace.mservice.inventory.DeleteFacilityRequest
	15, // 49: org.gaterace.mservice.inventory.MServiceInventory.get_facility:input_type -> org.gaterace.mservice.inventory.GetFacilityRequest
	17, // 50: org.gaterace.mservice.inventory.MServiceInventory.get_facilities:input_type -> org.gaterace.mservice.inventory.GetFacilitiesRequest
	19, // 51: org.gaterace.mservice.inventory.MServiceInventory.get_facility_wrapper:input_type -> org.gaterace.mservice.inventory.GetFacilityWrapperRequest
	21, // 52: org.gaterace.mservice.inventory.MServiceInventory.create_subarea_type:input_type -> org.gaterace.mservice.inventory.CreateSubareaTypeRequest
	23, // 53: org.gaterace.mservice.inventory.MServiceInventory.update_subarea_type:input_type -> org.gaterace.mservice.inventory.UpdateSubareaTypeRequest
	25, // 54: org.gaterace.mservice.inventory.MServiceInventory.delete_subarea_type:input_type -> org.gaterace.mservice.inventory.DeleteSubareaTypeRequest
	27, // 55: org.gaterace.mservice.inventory.MServiceInventory.get_subarea_type:input_type -> org.gaterace.mservice.inventory.GetSubareaTypeRequest
	29, // 56: org.gaterace.mservice.inventory.MServiceInventory.get_subarea_types:input_type -> org.gaterace.mservice.inventory.GetSubareaTypesRequest
	31, // 57: org.gaterace.mservice.inventory.MServiceInventory.create_item_type:input_type -> org.gaterace.mservice.inventory.CreateItemTypeRequest
	33, // 58: org.gaterace.mservice.inventory.MServiceInventory.update_item_type:input_type -> org.gaterace.mservice.inventory.UpdateItemTypeRequest
	35, // 59: org.gaterace.mservice.inventory.MServiceInventory.delete_item_type:input_type -> org.gaterace.mservice.inventory.DeleteItemTypeRequest
	37, // 60: org.gaterace.mservice.inventory.MServiceInventory.get_item_type:input_type -> org.gaterace.mservice.inventory.GetItemTypeRequest
	39, // 61: org.gaterace.mservice.inventory.MServiceInventory.get_item_types:input_type -> org.gaterace.mservice.inventory.GetItemTypesRequest
	41, // 62: org.gaterace.mservice.inventory.MServiceInventory.create_subarea:input_type -> org.gaterace.mservice.inventory.CreateSubareaRequest
	43, // 63: org.gaterace.mservice.inventory.MServiceInventory.update_subarea:input_type -> org.gaterace.mservice.inventory.UpdateSubareaRequest
	45, // 64: org.gaterace.mservice.inventory.MServiceInventory.delete_subarea:input_type -> org.gaterace.mservice.inventory.DeleteSubareaRequest
	47, // 65: org.gaterace.mservice.inventory.MServiceInventory.get_subarea:input_type -> org.gaterace.mservice.inventory.GetSubareaRequest
	49, // 66: org.gaterace.mservice.inventory.MServiceInventory.get_subareas:input_type -> org.gaterace.mservice.inventory.GetSubareasRequest
	51, // 67: org.gaterace.mservice.inventory.MServiceInventory.create_product:input_type -> org.gaterace.mservice.inventory.CreateProductRequest
	53, // 68: org.gaterace.mservice.inventory.MServiceInventory.update_product:input_type -> org.gaterace.mservice.inventory.UpdateProductRequest
	55, // 69: org.gaterace.mservice.inventory.MServiceInventory.delete_product:input_type -> org.gaterace.mservice.inventory.DeleteProductRequest
	57, // 70: org.gaterace.mservice.inventory.MServiceInventory.get_product:input_type -> org.gaterace.mservice.inventory.GetProductRequest
	59, // 71: org.gaterace.mservice.inventory.MServiceInventory.get_products:input_type -> org.gaterace.mservice.inventory.GetProductsRequest
	61, // 72: org.gaterace.mservice.inventory.MServiceInventory.create_inventory_item:input_type -> org.gaterace.mservice.inventory.CreateInventoryItemRequest
	63, // 73: org.gaterace.mservice.inventory.MServiceInventory.update_inventory_item:input_type -> org.gaterace.mservice.inventory.UpdateInventoryItemRequest
	65, // 74: org.gaterace.mservice.inventory.MServiceInventory.delete_inventory_item:input_type -> org.gaterace.mservice.inventory.DeleteInventoryItemRequest
	67, // 75: org.gaterace.mservice.inventory.MServiceInventory.get_inventory_item:input_type -> org.gaterace.mservice.inventory.GetInventoryItemRequest
	69, // 76: org.gaterace.mservice.inventory.MServiceInventory.get_inventory_items_by_product:input_type -> org.gaterace.mservice.inventory.GetInventoryItemsByProductRequest
	71, // 77: org.gaterace.mservice.inventory.MServiceInventory.get_inventory_items_by_subarea:input_type -> org.gaterace.mservice.inventory.GetInventoryItemsBySubareaRequest
	73, // 78: org.gaterace.mservice.inventory.MServiceInventory.get_inventory_items_by_facility:input_type -> org.gaterace.mservice.inventory.GetInventoryItemsByFacilityRequest
	75, // 79: org.gaterace.mservice.inventory.MServiceInventory.get_server_version:input_type -> org.gaterace.mservice.inventory.GetServerVersionRequest
	77, // 80: org.gaterace.mservice.inventory.MServiceInventory.create_entity_schema:input_type -> org.gaterace.mservice.inventory.CreateEntitySchemaRequest
	79, // 81: org.gaterace.mservice.inventory.MServiceInventory.update_entity_schema:input_type -> org.gaterace.mservice.inventory.UpdateEntitySchemaRequest
	81, // 82: org.gaterace.mservice.inventory.MServiceInventory.delete_entity_schema:input_type -> org.gaterace.mservice.inventory.DeleteEntitySchemaRequest
	83, // 83: org.gaterace.mservice.inventory.MServiceInventory.get_entity_schema:input_type -> org.gaterace.mservice.inventory.GetEntitySchemaRequest
	85, // 84: org.gaterace.mservice.inventory.MServiceInventory.get_entity_schemas:input_type -> org.gaterace.mservice.inventory.GetEntitySchemasRequest
	10, // 85: org.gaterace.mservice.inventory.MServiceInventory.create_facility:output_type -> org.gaterace.mservice.inventory.CreateFacilityResponse
	12, // 86: org.gaterace.mservice.inventory.MServiceInventory.update_facility:output_type -> org.gaterace.mservice.inventory.UpdateFacilityResponse
	14, // 87: org.gaterace.mservice.inventory.MServiceInventory.delete_facility:output_type -> org.gaterace.mservice.inventory.DeleteFacilityResponse
	16, // 88: org.gaterace.mservice.inventory.MServiceInventory.get_facility:output_type -> org.gaterace.mservice.inventory.GetFacilityResponse
	18, // 89: org.gaterace.mservice.inventory.MServiceInventory.get_facilities:output_type -> org.gaterace.mservice.inventory.GetFacilitiesResponse
	20, // 90: org.gaterace.mservice.inventory.MServiceInventory.get_facility_wrapper:output_type -> org.gaterace.mservice.inventory.GetFacilityWrapperResponse
	22, // 91: org.gaterace.mservice.inventory.MServiceInventory.create_subarea_type:output_type -> org.gaterace.mservice.inventory.CreateSubareaTypeResponse
	24, // 92: org.gaterace.mservice.inventory.MServiceInventory.update_subarea_type:output_type -> org.gaterace.mservice.inventory.UpdateSubareaTypeResponse
	26, // 93: org.gaterace.mservice.inventory.MServiceInventory.delete_subarea_type:output_type -> org.gaterace.mservice.inventory.DeleteSubareaTypeResponse
	28, // 94: org.gaterace.mservice.inventory.MServiceInventory.get_subarea_type:output_type -> org.gaterace.mservice.inventory.GetSubareaTypeResponse
	30, // 95: org.gaterace.mservice.inventory.MServiceInventory.get_subarea_types:output_type -> org.gaterace.mservice.inventory.GetSubareaTypesResponse
	32, // 96: org.gaterace.mservice.inventory.MServiceInventory.create_item_type:output_type -> org.gaterace.mservice.inventory.CreateItemTypeResponse
	34, // 97: org.gaterace.mservice.inventory.MServiceInventory.update_item_type:output_type -> org.gaterace.mservice.inventory.UpdateItemTypeResponse
	36, // 98: org.gaterace.mservice.inventory.MServiceInventory.delete_item_type:output_type -> org.gaterace.mservice.inventory.DeleteItemTypeResponse
	38, // 99: org.gaterace.mservice.inventory.MServiceInventory.get_item_type:output_type -> org.gaterace.mservice.inventory.GetItemTypeResponse
	40, // 100: org.gaterace.mservice.inventory.MServiceInventory.get_item_types:output_type -> org.gaterace.mservice.inventory.GetItemTypesResponse
	42, // 101: org.gaterace.mservice.inventory.MServiceInventory.create_subarea:output_type -> org.gaterace.mservice.inventory.CreateSubareaResponse
	44, // 102: org.gaterace.mservice.inventory.MServiceInventory.update_subarea:output_type -> org.gaterace.mservice.inventory.UpdateSubareaResponse
	46, // 103: org.gaterace.mservice.inventory.MServiceInventory.delete_subarea:output_type -> org.gaterace.mservice.inventory.DeleteSubareaResponse
	48, // 104: org.gaterace.mservice.inventory.MServiceInventory.get_subarea:output_type -> org.gaterace.mservice.inventory.GetSubareaResponse
	50, // 105: org.gaterace.mservice.inventory.MServiceInventory.get_subareas:output_type -> org.gaterace.mservice.inventory.GetSubareasResponse
	52, // 106: org.gaterace.mservice.inventory.MServiceInventory.create_product:output_type -> org.gaterace.mservice.inventory.CreateProductResponse
	54, // 107: org.gaterace.mservice.inventory.MServiceInventory.update_product:output_type -> org.gaterace.mservice.inventory.UpdateProductResponse
	56, // 108: org.gaterace.mservice.inventory.MServiceInventory.delete_product:output_type -> org.gaterace.mservice.inventory.DeleteProductResponse
	58, // 109: org.gaterace.mservice.inventory.MServiceInventory.get_product:output_type -> org.gaterace.mservice.inventory.GetProductResponse
	60, // 110: org.gaterace.mservice.inventory.MServiceInventory.get_products:output_type -> org.gaterace.mservice.inventory.GetProductsResponse
	62, // 111: org.gaterace.mservice.inventory.MServiceInventory.create_inventory_item:output_type -> org.gaterace.mservice.inventory.CreateInventoryItemResponse
	64, // 112: org.gaterace.mservice.inventory.MServiceInventory.update_inventory_item:output_type -> org.gaterace.mservice.inventory.UpdateInventoryItemResponse
	66, // 113: org.gaterace.mservice.inventory.MServiceInventory.delete_inventory_item:output_type -> org.gaterace.mservice.inventory.DeleteInventoryItemResponse
	68, // 114: org.gaterace.mservice.inventory.MServiceInventory.get_inventory_item:output_type -> org.gaterace.mservice.inventory.GetInventoryItemResponse
	70, // 115: org.gaterace.mservice.inventory.MServiceInventory.get_inventory_items_by_product:output_type -> org.gaterace.mservice.inventory.GetInventoryItemsByProductResponse
	72, // 116: org.gaterace.mservice.inventory.MServiceInventory.get_inventory_items_by_subarea:output_type -> org.gaterace.mservice.inventory.GetInventoryItemsBySubareaResponse
	74, // 117: org.gaterace.mservice.inventory.MServiceInventory.get_inventory_items_by_facility:output_type -> org.gaterace.mservice.inventory.GetInventoryItemsByFacilityResponse
	76, // 118: org.gaterace.mservice.inventory.MServiceInventory.get_server_version:output_type -> org.gaterace.mservice.inventory.GetServerVersionResponse
	78, // 119: org.gaterace.mservice.inventory.MServiceInventory.create_entity_schema:output_type -> org.gaterace.mservice.inventory.CreateEntitySchemaResponse
	80, // 120: org.gaterace.mservice.inventory.MServiceInventory.update_entity_schema:output_type -> org.gaterace.mservice.inventory.UpdateEntitySchemaResponse
	82, // 121: org.gaterace.mservice.inventory.MServiceInventory.delete_entity_schema:output_type -> org.gaterace.mservice.inventory.DeleteEntitySchemaResponse
	84, // 122: org.gaterace.mservice.inventory.MServiceInventory.get_entity_schema:output_type -> org.gaterace.mservice.inventory.GetEntitySchemaResponse
	86, // 123: org.gaterace.mservice.inventory.MServiceInventory.get_entity_schemas:output_type -> org.gaterace.mservice.inventory.GetEntitySchemasResponse
	85, // [85:124] is the sub-list for method output_type
	46, // [46:85] is the sub-list for method input_type
	46, // [46:46] is the sub-list for extension type_name
	46, // [46:46] is the sub-list for extension extendee
	0,  // [0:46] is the sub-list for field type_name
}

func init() { file_MServiceInventory_proto_init() }
func file_MServiceInventory_proto_init() {
	if File_MServiceInventory_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_MServiceInventory_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Facility); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FacilityWrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubareaType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subarea); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubareaWrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InventoryItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntitySchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFacilityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFacilityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFacilityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFacilityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFacilityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFacilityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFacilityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFacilityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFacilitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFacilitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFacilityWrapperRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFacilityWrapperResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSubareaTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSubareaTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubareaTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubareaTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSubareaTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSubareaTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubareaTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubareaTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubareaTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubareaTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateItemTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateItemTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateItemTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateItemTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteItemTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteItemTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSubareaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSubareaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubareaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubareaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSubareaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSubareaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubareaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubareaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubareasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubareasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProductResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProductResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProductResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInventoryItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInventoryItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInventoryItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInventoryItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInventoryItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInventoryItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInventoryItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInventoryItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInventoryItemsByProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInventoryItemsByProductResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInventoryItemsBySubareaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInventoryItemsBySubareaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInventoryItemsByFacilityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInventoryItemsByFacilityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEntitySchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEntitySchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEntitySchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEntitySchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEntitySchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEntitySchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntitySchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntitySchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntitySchemasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceInventory_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntitySchemasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_MServiceInventory_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   87,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_MServiceInventory_proto_goTypes,
		DependencyIndexes: file_MServiceInventory_proto_depIdxs,
		MessageInfos:      file_MServiceInventory_proto_msgTypes,
	}.Build()
	File_MServiceInventory_proto = out.File
	file_MServiceInventory_proto_rawDesc = nil
	file_MServiceInventory_proto_goTypes = nil
	file_MServiceInventory_proto_depIdxs = nil
}
